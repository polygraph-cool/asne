/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // import * as d3 from 'd3'\n\n\n__webpack_require__(11);\n\nvar _graphic = __webpack_require__(4);\n\nvar _graphic2 = _interopRequireDefault(_graphic);\n\nvar _histogram = __webpack_require__(5);\n\nvar _histogram2 = _interopRequireDefault(_histogram);\n\nvar _table = __webpack_require__(10);\n\nvar _table2 = _interopRequireDefault(_table);\n\nvar _newsroom = __webpack_require__(6);\n\nvar _newsroom2 = _interopRequireDefault(_newsroom);\n\nvar _slope = __webpack_require__(8);\n\nvar _slope2 = _interopRequireDefault(_slope);\n\nvar _swarm = __webpack_require__(9);\n\nvar _swarm2 = _interopRequireDefault(_swarm);\n\nvar _scatters = __webpack_require__(7);\n\nvar _scatters2 = _interopRequireDefault(_scatters);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction cleanTk(d) {\n\treturn _extends({}, d);\n}\n\nfunction init() {\n\treturn new Promise(function (resolve, reject) {\n\t\td3.queue().defer(d3.csv, 'assets/map_data_2.csv').defer(d3.csv, 'assets/lats.csv').defer(d3.csv, 'assets/cleannewsids.csv').defer(d3.csv, 'assets/news_ids.csv').awaitAll(function (err, result) {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t_scatters2.default.init(result[0], result[1], result[2], result[3]);\n\t\t\t\t_swarm2.default.init(result[0], result[1], result[2], result[3]);\n\t\t\t\t_graphic2.default.init(result[0], result[1], result[2], result[3]);\n\t\t\t\t_histogram2.default.init(result[0], result[1], result[2], result[3]);\n\t\t\t\t_table2.default.init(result[0], result[1], result[2], result[3]);\n\t\t\t\t_slope2.default.init(result[0], result[1], result[2], result[3]);\n\t\t\t\t_newsroom2.default.init();\n\t\t\t}\n\t\t});\n\t});\n}\n\nexports.default = { init: init };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvbG9hZC1kYXRhLmpzPzdhZjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnXG5pbXBvcnQgJ3Byb21pcydcbmltcG9ydCBncmFwaGljIGZyb20gJy4vZ3JhcGhpYydcbmltcG9ydCBoaXN0b2dyYW0gZnJvbSAnLi9oaXN0b2dyYW0nXG5pbXBvcnQgdGFibGUgZnJvbSAnLi90YWJsZSdcbmltcG9ydCBuZXdzcm9vbSBmcm9tICcuL25ld3Nyb29tJ1xuaW1wb3J0IHNsb3BlIGZyb20gJy4vc2xvcGUnXG5pbXBvcnQgc3dhcm0gZnJvbSAnLi9zd2FybSdcbmltcG9ydCBzY2F0dGVyIGZyb20gJy4vc2NhdHRlcnMnXG5cblxuZnVuY3Rpb24gY2xlYW5UayhkKSB7XG5cdHJldHVybiB7XG5cdFx0Li4uZCxcblx0fVxufVxuXG5mdW5jdGlvbiBpbml0KCkge1xuXHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXHRcdGQzLnF1ZXVlKClcblx0XHRcdC5kZWZlcihkMy5jc3YsJ2Fzc2V0cy9tYXBfZGF0YV8yLmNzdicpXG5cdFx0XHQuZGVmZXIoZDMuY3N2LCdhc3NldHMvbGF0cy5jc3YnKVxuXHRcdFx0LmRlZmVyKGQzLmNzdiwnYXNzZXRzL2NsZWFubmV3c2lkcy5jc3YnKVxuXHRcdFx0LmRlZmVyKGQzLmNzdiwnYXNzZXRzL25ld3NfaWRzLmNzdicpXG5cdFx0XHQuYXdhaXRBbGwoKGVyciwgcmVzdWx0KSA9PiB7XG5cdFx0XHRcdGlmIChlcnIpe1xuXHRcdFx0XHRcdHJlamVjdChlcnIpXG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0c2NhdHRlci5pbml0KHJlc3VsdFswXSxyZXN1bHRbMV0scmVzdWx0WzJdLHJlc3VsdFszXSk7XG5cdFx0XHRcdFx0c3dhcm0uaW5pdChyZXN1bHRbMF0scmVzdWx0WzFdLHJlc3VsdFsyXSxyZXN1bHRbM10pO1xuXHRcdFx0XHRcdGdyYXBoaWMuaW5pdChyZXN1bHRbMF0scmVzdWx0WzFdLHJlc3VsdFsyXSxyZXN1bHRbM10pO1xuXHRcdFx0XHRcdGhpc3RvZ3JhbS5pbml0KHJlc3VsdFswXSxyZXN1bHRbMV0scmVzdWx0WzJdLHJlc3VsdFszXSk7XG5cdFx0XHRcdFx0dGFibGUuaW5pdChyZXN1bHRbMF0scmVzdWx0WzFdLHJlc3VsdFsyXSxyZXN1bHRbM10pO1xuXHRcdFx0XHRcdHNsb3BlLmluaXQocmVzdWx0WzBdLHJlc3VsdFsxXSxyZXN1bHRbMl0scmVzdWx0WzNdKTtcblx0XHRcdFx0XHRuZXdzcm9vbS5pbml0KCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pXG5cdH0pXG59XG5cbmV4cG9ydCBkZWZhdWx0IHsgaW5pdCB9XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2pzL2xvYWQtZGF0YS5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUFBO0FBQ0E7OztBQUFBO0FBQ0E7OztBQUFBO0FBQ0E7OztBQUFBO0FBQ0E7OztBQUFBO0FBQ0E7OztBQUFBO0FBQ0E7OztBQUFBO0FBQ0E7Ozs7O0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n// device sniffing for mobile\n\nvar isMobile = {\n\tandroid: function android() {\n\t\treturn navigator.userAgent.match(/Android/i);\n\t},\n\n\tblackberry: function blackberry() {\n\t\treturn navigator.userAgent.match(/BlackBerry/i);\n\t},\n\n\tios: function ios() {\n\t\treturn navigator.userAgent.match(/iPhone|iPad|iPod/i);\n\t},\n\n\topera: function opera() {\n\t\treturn navigator.userAgent.match(/Opera Mini/i);\n\t},\n\n\twindows: function windows() {\n\t\treturn navigator.userAgent.match(/IEMobile/i);\n\t},\n\n\tany: function any() {\n\t\treturn isMobile.android() || isMobile.blackberry() || isMobile.ios() || isMobile.opera() || isMobile.windows();\n\t}\n};\n\nexports.default = isMobile;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvdXRpbHMvaXMtbW9iaWxlLmpzPzY1NGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZGV2aWNlIHNuaWZmaW5nIGZvciBtb2JpbGVcblxuY29uc3QgaXNNb2JpbGUgPSB7XG5cdGFuZHJvaWQ6ICgpID0+IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0FuZHJvaWQvaSksXG5cblx0YmxhY2tiZXJyeTogKCkgPT4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvQmxhY2tCZXJyeS9pKSxcblxuXHRpb3M6ICgpID0+IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL2lQaG9uZXxpUGFkfGlQb2QvaSksXG5cblx0b3BlcmE6ICgpID0+IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL09wZXJhIE1pbmkvaSksXG5cblx0d2luZG93czogKCkgPT4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvSUVNb2JpbGUvaSksXG5cblx0YW55OiAoKSA9PiAoXG5cdFx0aXNNb2JpbGUuYW5kcm9pZCgpIHx8XG5cdFx0aXNNb2JpbGUuYmxhY2tiZXJyeSgpIHx8XG5cdFx0aXNNb2JpbGUuaW9zKCkgfHxcblx0XHRpc01vYmlsZS5vcGVyYSgpIHx8XG5cdFx0aXNNb2JpbGUud2luZG93cygpXG5cdCksXG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzTW9iaWxlXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2pzL3V0aWxzL2lzLW1vYmlsZS5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBWEE7QUFDQTtBQW1CQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vbG9kYXNoLmRlYm91bmNlL2luZGV4LmpzPzNiZGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBsb2Rhc2ggKEN1c3RvbSBCdWlsZCkgPGh0dHBzOi8vbG9kYXNoLmNvbS8+XG4gKiBCdWlsZDogYGxvZGFzaCBtb2R1bGFyaXplIGV4cG9ydHM9XCJucG1cIiAtbyAuL2BcbiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzIDxodHRwczovL2pxdWVyeS5vcmcvPlxuICogUmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UgPGh0dHBzOi8vbG9kYXNoLmNvbS9saWNlbnNlPlxuICogQmFzZWQgb24gVW5kZXJzY29yZS5qcyAxLjguMyA8aHR0cDovL3VuZGVyc2NvcmVqcy5vcmcvTElDRU5TRT5cbiAqIENvcHlyaWdodCBKZXJlbXkgQXNoa2VuYXMsIERvY3VtZW50Q2xvdWQgYW5kIEludmVzdGlnYXRpdmUgUmVwb3J0ZXJzICYgRWRpdG9yc1xuICovXG5cbi8qKiBVc2VkIGFzIHRoZSBgVHlwZUVycm9yYCBtZXNzYWdlIGZvciBcIkZ1bmN0aW9uc1wiIG1ldGhvZHMuICovXG52YXIgRlVOQ19FUlJPUl9URVhUID0gJ0V4cGVjdGVkIGEgZnVuY3Rpb24nO1xuXG4vKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBOQU4gPSAwIC8gMDtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIHN5bWJvbFRhZyA9ICdbb2JqZWN0IFN5bWJvbF0nO1xuXG4vKiogVXNlZCB0byBtYXRjaCBsZWFkaW5nIGFuZCB0cmFpbGluZyB3aGl0ZXNwYWNlLiAqL1xudmFyIHJlVHJpbSA9IC9eXFxzK3xcXHMrJC9nO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgYmFkIHNpZ25lZCBoZXhhZGVjaW1hbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCYWRIZXggPSAvXlstK10weFswLTlhLWZdKyQvaTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGJpbmFyeSBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCaW5hcnkgPSAvXjBiWzAxXSskL2k7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBvY3RhbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNPY3RhbCA9IC9eMG9bMC03XSskL2k7XG5cbi8qKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB3aXRob3V0IGEgZGVwZW5kZW5jeSBvbiBgcm9vdGAuICovXG52YXIgZnJlZVBhcnNlSW50ID0gcGFyc2VJbnQ7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZ2xvYmFsYCBmcm9tIE5vZGUuanMuICovXG52YXIgZnJlZUdsb2JhbCA9IHR5cGVvZiBnbG9iYWwgPT0gJ29iamVjdCcgJiYgZ2xvYmFsICYmIGdsb2JhbC5PYmplY3QgPT09IE9iamVjdCAmJiBnbG9iYWw7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovXG52YXIgZnJlZVNlbGYgPSB0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmICYmIHNlbGYuT2JqZWN0ID09PSBPYmplY3QgJiYgc2VsZjtcblxuLyoqIFVzZWQgYXMgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QuICovXG52YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqXG4gKiBVc2VkIHRvIHJlc29sdmUgdGhlXG4gKiBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZylcbiAqIG9mIHZhbHVlcy5cbiAqL1xudmFyIG9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVNYXggPSBNYXRoLm1heCxcbiAgICBuYXRpdmVNaW4gPSBNYXRoLm1pbjtcblxuLyoqXG4gKiBHZXRzIHRoZSB0aW1lc3RhbXAgb2YgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdGhhdCBoYXZlIGVsYXBzZWQgc2luY2VcbiAqIHRoZSBVbml4IGVwb2NoICgxIEphbnVhcnkgMTk3MCAwMDowMDowMCBVVEMpLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMi40LjBcbiAqIEBjYXRlZ29yeSBEYXRlXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSB0aW1lc3RhbXAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uZGVmZXIoZnVuY3Rpb24oc3RhbXApIHtcbiAqICAgY29uc29sZS5sb2coXy5ub3coKSAtIHN0YW1wKTtcbiAqIH0sIF8ubm93KCkpO1xuICogLy8gPT4gTG9ncyB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBpdCB0b29rIGZvciB0aGUgZGVmZXJyZWQgaW52b2NhdGlvbi5cbiAqL1xudmFyIG5vdyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcm9vdC5EYXRlLm5vdygpO1xufTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgZGVib3VuY2VkIGZ1bmN0aW9uIHRoYXQgZGVsYXlzIGludm9raW5nIGBmdW5jYCB1bnRpbCBhZnRlciBgd2FpdGBcbiAqIG1pbGxpc2Vjb25kcyBoYXZlIGVsYXBzZWQgc2luY2UgdGhlIGxhc3QgdGltZSB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uIHdhc1xuICogaW52b2tlZC4gVGhlIGRlYm91bmNlZCBmdW5jdGlvbiBjb21lcyB3aXRoIGEgYGNhbmNlbGAgbWV0aG9kIHRvIGNhbmNlbFxuICogZGVsYXllZCBgZnVuY2AgaW52b2NhdGlvbnMgYW5kIGEgYGZsdXNoYCBtZXRob2QgdG8gaW1tZWRpYXRlbHkgaW52b2tlIHRoZW0uXG4gKiBQcm92aWRlIGBvcHRpb25zYCB0byBpbmRpY2F0ZSB3aGV0aGVyIGBmdW5jYCBzaG91bGQgYmUgaW52b2tlZCBvbiB0aGVcbiAqIGxlYWRpbmcgYW5kL29yIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIGB3YWl0YCB0aW1lb3V0LiBUaGUgYGZ1bmNgIGlzIGludm9rZWRcbiAqIHdpdGggdGhlIGxhc3QgYXJndW1lbnRzIHByb3ZpZGVkIHRvIHRoZSBkZWJvdW5jZWQgZnVuY3Rpb24uIFN1YnNlcXVlbnRcbiAqIGNhbGxzIHRvIHRoZSBkZWJvdW5jZWQgZnVuY3Rpb24gcmV0dXJuIHRoZSByZXN1bHQgb2YgdGhlIGxhc3QgYGZ1bmNgXG4gKiBpbnZvY2F0aW9uLlxuICpcbiAqICoqTm90ZToqKiBJZiBgbGVhZGluZ2AgYW5kIGB0cmFpbGluZ2Agb3B0aW9ucyBhcmUgYHRydWVgLCBgZnVuY2AgaXNcbiAqIGludm9rZWQgb24gdGhlIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIHRpbWVvdXQgb25seSBpZiB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uXG4gKiBpcyBpbnZva2VkIG1vcmUgdGhhbiBvbmNlIGR1cmluZyB0aGUgYHdhaXRgIHRpbWVvdXQuXG4gKlxuICogSWYgYHdhaXRgIGlzIGAwYCBhbmQgYGxlYWRpbmdgIGlzIGBmYWxzZWAsIGBmdW5jYCBpbnZvY2F0aW9uIGlzIGRlZmVycmVkXG4gKiB1bnRpbCB0byB0aGUgbmV4dCB0aWNrLCBzaW1pbGFyIHRvIGBzZXRUaW1lb3V0YCB3aXRoIGEgdGltZW91dCBvZiBgMGAuXG4gKlxuICogU2VlIFtEYXZpZCBDb3JiYWNobydzIGFydGljbGVdKGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vZGVib3VuY2luZy10aHJvdHRsaW5nLWV4cGxhaW5lZC1leGFtcGxlcy8pXG4gKiBmb3IgZGV0YWlscyBvdmVyIHRoZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIGBfLmRlYm91bmNlYCBhbmQgYF8udGhyb3R0bGVgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBGdW5jdGlvblxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gZGVib3VuY2UuXG4gKiBAcGFyYW0ge251bWJlcn0gW3dhaXQ9MF0gVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gZGVsYXkuXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnM9e31dIFRoZSBvcHRpb25zIG9iamVjdC5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMubGVhZGluZz1mYWxzZV1cbiAqICBTcGVjaWZ5IGludm9raW5nIG9uIHRoZSBsZWFkaW5nIGVkZ2Ugb2YgdGhlIHRpbWVvdXQuXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMubWF4V2FpdF1cbiAqICBUaGUgbWF4aW11bSB0aW1lIGBmdW5jYCBpcyBhbGxvd2VkIHRvIGJlIGRlbGF5ZWQgYmVmb3JlIGl0J3MgaW52b2tlZC5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMudHJhaWxpbmc9dHJ1ZV1cbiAqICBTcGVjaWZ5IGludm9raW5nIG9uIHRoZSB0cmFpbGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZGVib3VuY2VkIGZ1bmN0aW9uLlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBBdm9pZCBjb3N0bHkgY2FsY3VsYXRpb25zIHdoaWxlIHRoZSB3aW5kb3cgc2l6ZSBpcyBpbiBmbHV4LlxuICogalF1ZXJ5KHdpbmRvdykub24oJ3Jlc2l6ZScsIF8uZGVib3VuY2UoY2FsY3VsYXRlTGF5b3V0LCAxNTApKTtcbiAqXG4gKiAvLyBJbnZva2UgYHNlbmRNYWlsYCB3aGVuIGNsaWNrZWQsIGRlYm91bmNpbmcgc3Vic2VxdWVudCBjYWxscy5cbiAqIGpRdWVyeShlbGVtZW50KS5vbignY2xpY2snLCBfLmRlYm91bmNlKHNlbmRNYWlsLCAzMDAsIHtcbiAqICAgJ2xlYWRpbmcnOiB0cnVlLFxuICogICAndHJhaWxpbmcnOiBmYWxzZVxuICogfSkpO1xuICpcbiAqIC8vIEVuc3VyZSBgYmF0Y2hMb2dgIGlzIGludm9rZWQgb25jZSBhZnRlciAxIHNlY29uZCBvZiBkZWJvdW5jZWQgY2FsbHMuXG4gKiB2YXIgZGVib3VuY2VkID0gXy5kZWJvdW5jZShiYXRjaExvZywgMjUwLCB7ICdtYXhXYWl0JzogMTAwMCB9KTtcbiAqIHZhciBzb3VyY2UgPSBuZXcgRXZlbnRTb3VyY2UoJy9zdHJlYW0nKTtcbiAqIGpRdWVyeShzb3VyY2UpLm9uKCdtZXNzYWdlJywgZGVib3VuY2VkKTtcbiAqXG4gKiAvLyBDYW5jZWwgdGhlIHRyYWlsaW5nIGRlYm91bmNlZCBpbnZvY2F0aW9uLlxuICogalF1ZXJ5KHdpbmRvdykub24oJ3BvcHN0YXRlJywgZGVib3VuY2VkLmNhbmNlbCk7XG4gKi9cbmZ1bmN0aW9uIGRlYm91bmNlKGZ1bmMsIHdhaXQsIG9wdGlvbnMpIHtcbiAgdmFyIGxhc3RBcmdzLFxuICAgICAgbGFzdFRoaXMsXG4gICAgICBtYXhXYWl0LFxuICAgICAgcmVzdWx0LFxuICAgICAgdGltZXJJZCxcbiAgICAgIGxhc3RDYWxsVGltZSxcbiAgICAgIGxhc3RJbnZva2VUaW1lID0gMCxcbiAgICAgIGxlYWRpbmcgPSBmYWxzZSxcbiAgICAgIG1heGluZyA9IGZhbHNlLFxuICAgICAgdHJhaWxpbmcgPSB0cnVlO1xuXG4gIGlmICh0eXBlb2YgZnVuYyAhPSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICB9XG4gIHdhaXQgPSB0b051bWJlcih3YWl0KSB8fCAwO1xuICBpZiAoaXNPYmplY3Qob3B0aW9ucykpIHtcbiAgICBsZWFkaW5nID0gISFvcHRpb25zLmxlYWRpbmc7XG4gICAgbWF4aW5nID0gJ21heFdhaXQnIGluIG9wdGlvbnM7XG4gICAgbWF4V2FpdCA9IG1heGluZyA/IG5hdGl2ZU1heCh0b051bWJlcihvcHRpb25zLm1heFdhaXQpIHx8IDAsIHdhaXQpIDogbWF4V2FpdDtcbiAgICB0cmFpbGluZyA9ICd0cmFpbGluZycgaW4gb3B0aW9ucyA/ICEhb3B0aW9ucy50cmFpbGluZyA6IHRyYWlsaW5nO1xuICB9XG5cbiAgZnVuY3Rpb24gaW52b2tlRnVuYyh0aW1lKSB7XG4gICAgdmFyIGFyZ3MgPSBsYXN0QXJncyxcbiAgICAgICAgdGhpc0FyZyA9IGxhc3RUaGlzO1xuXG4gICAgbGFzdEFyZ3MgPSBsYXN0VGhpcyA9IHVuZGVmaW5lZDtcbiAgICBsYXN0SW52b2tlVGltZSA9IHRpbWU7XG4gICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gbGVhZGluZ0VkZ2UodGltZSkge1xuICAgIC8vIFJlc2V0IGFueSBgbWF4V2FpdGAgdGltZXIuXG4gICAgbGFzdEludm9rZVRpbWUgPSB0aW1lO1xuICAgIC8vIFN0YXJ0IHRoZSB0aW1lciBmb3IgdGhlIHRyYWlsaW5nIGVkZ2UuXG4gICAgdGltZXJJZCA9IHNldFRpbWVvdXQodGltZXJFeHBpcmVkLCB3YWl0KTtcbiAgICAvLyBJbnZva2UgdGhlIGxlYWRpbmcgZWRnZS5cbiAgICByZXR1cm4gbGVhZGluZyA/IGludm9rZUZ1bmModGltZSkgOiByZXN1bHQ7XG4gIH1cblxuICBmdW5jdGlvbiByZW1haW5pbmdXYWl0KHRpbWUpIHtcbiAgICB2YXIgdGltZVNpbmNlTGFzdENhbGwgPSB0aW1lIC0gbGFzdENhbGxUaW1lLFxuICAgICAgICB0aW1lU2luY2VMYXN0SW52b2tlID0gdGltZSAtIGxhc3RJbnZva2VUaW1lLFxuICAgICAgICByZXN1bHQgPSB3YWl0IC0gdGltZVNpbmNlTGFzdENhbGw7XG5cbiAgICByZXR1cm4gbWF4aW5nID8gbmF0aXZlTWluKHJlc3VsdCwgbWF4V2FpdCAtIHRpbWVTaW5jZUxhc3RJbnZva2UpIDogcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvdWxkSW52b2tlKHRpbWUpIHtcbiAgICB2YXIgdGltZVNpbmNlTGFzdENhbGwgPSB0aW1lIC0gbGFzdENhbGxUaW1lLFxuICAgICAgICB0aW1lU2luY2VMYXN0SW52b2tlID0gdGltZSAtIGxhc3RJbnZva2VUaW1lO1xuXG4gICAgLy8gRWl0aGVyIHRoaXMgaXMgdGhlIGZpcnN0IGNhbGwsIGFjdGl2aXR5IGhhcyBzdG9wcGVkIGFuZCB3ZSdyZSBhdCB0aGVcbiAgICAvLyB0cmFpbGluZyBlZGdlLCB0aGUgc3lzdGVtIHRpbWUgaGFzIGdvbmUgYmFja3dhcmRzIGFuZCB3ZSdyZSB0cmVhdGluZ1xuICAgIC8vIGl0IGFzIHRoZSB0cmFpbGluZyBlZGdlLCBvciB3ZSd2ZSBoaXQgdGhlIGBtYXhXYWl0YCBsaW1pdC5cbiAgICByZXR1cm4gKGxhc3RDYWxsVGltZSA9PT0gdW5kZWZpbmVkIHx8ICh0aW1lU2luY2VMYXN0Q2FsbCA+PSB3YWl0KSB8fFxuICAgICAgKHRpbWVTaW5jZUxhc3RDYWxsIDwgMCkgfHwgKG1heGluZyAmJiB0aW1lU2luY2VMYXN0SW52b2tlID49IG1heFdhaXQpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRpbWVyRXhwaXJlZCgpIHtcbiAgICB2YXIgdGltZSA9IG5vdygpO1xuICAgIGlmIChzaG91bGRJbnZva2UodGltZSkpIHtcbiAgICAgIHJldHVybiB0cmFpbGluZ0VkZ2UodGltZSk7XG4gICAgfVxuICAgIC8vIFJlc3RhcnQgdGhlIHRpbWVyLlxuICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgcmVtYWluaW5nV2FpdCh0aW1lKSk7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFpbGluZ0VkZ2UodGltZSkge1xuICAgIHRpbWVySWQgPSB1bmRlZmluZWQ7XG5cbiAgICAvLyBPbmx5IGludm9rZSBpZiB3ZSBoYXZlIGBsYXN0QXJnc2Agd2hpY2ggbWVhbnMgYGZ1bmNgIGhhcyBiZWVuXG4gICAgLy8gZGVib3VuY2VkIGF0IGxlYXN0IG9uY2UuXG4gICAgaWYgKHRyYWlsaW5nICYmIGxhc3RBcmdzKSB7XG4gICAgICByZXR1cm4gaW52b2tlRnVuYyh0aW1lKTtcbiAgICB9XG4gICAgbGFzdEFyZ3MgPSBsYXN0VGhpcyA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgIGlmICh0aW1lcklkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lcklkKTtcbiAgICB9XG4gICAgbGFzdEludm9rZVRpbWUgPSAwO1xuICAgIGxhc3RBcmdzID0gbGFzdENhbGxUaW1lID0gbGFzdFRoaXMgPSB0aW1lcklkID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgZnVuY3Rpb24gZmx1c2goKSB7XG4gICAgcmV0dXJuIHRpbWVySWQgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IHRyYWlsaW5nRWRnZShub3coKSk7XG4gIH1cblxuICBmdW5jdGlvbiBkZWJvdW5jZWQoKSB7XG4gICAgdmFyIHRpbWUgPSBub3coKSxcbiAgICAgICAgaXNJbnZva2luZyA9IHNob3VsZEludm9rZSh0aW1lKTtcblxuICAgIGxhc3RBcmdzID0gYXJndW1lbnRzO1xuICAgIGxhc3RUaGlzID0gdGhpcztcbiAgICBsYXN0Q2FsbFRpbWUgPSB0aW1lO1xuXG4gICAgaWYgKGlzSW52b2tpbmcpIHtcbiAgICAgIGlmICh0aW1lcklkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGxlYWRpbmdFZGdlKGxhc3RDYWxsVGltZSk7XG4gICAgICB9XG4gICAgICBpZiAobWF4aW5nKSB7XG4gICAgICAgIC8vIEhhbmRsZSBpbnZvY2F0aW9ucyBpbiBhIHRpZ2h0IGxvb3AuXG4gICAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgICAgIHJldHVybiBpbnZva2VGdW5jKGxhc3RDYWxsVGltZSk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICh0aW1lcklkID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgZGVib3VuY2VkLmNhbmNlbCA9IGNhbmNlbDtcbiAgZGVib3VuY2VkLmZsdXNoID0gZmx1c2g7XG4gIHJldHVybiBkZWJvdW5jZWQ7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgdGhlXG4gKiBbbGFuZ3VhZ2UgdHlwZV0oaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLWVjbWFzY3JpcHQtbGFuZ3VhZ2UtdHlwZXMpXG4gKiBvZiBgT2JqZWN0YC4gKGUuZy4gYXJyYXlzLCBmdW5jdGlvbnMsIG9iamVjdHMsIHJlZ2V4ZXMsIGBuZXcgTnVtYmVyKDApYCwgYW5kIGBuZXcgU3RyaW5nKCcnKWApXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3Qoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KF8ubm9vcCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gISF2YWx1ZSAmJiAodHlwZSA9PSAnb2JqZWN0JyB8fCB0eXBlID09ICdmdW5jdGlvbicpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLiBBIHZhbHVlIGlzIG9iamVjdC1saWtlIGlmIGl0J3Mgbm90IGBudWxsYFxuICogYW5kIGhhcyBhIGB0eXBlb2ZgIHJlc3VsdCBvZiBcIm9iamVjdFwiLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKG51bGwpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gIHJldHVybiAhIXZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0Jztcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgYFN5bWJvbGAgcHJpbWl0aXZlIG9yIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHN5bWJvbCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzU3ltYm9sKFN5bWJvbC5pdGVyYXRvcik7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1N5bWJvbCgnYWJjJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N5bWJvbCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdzeW1ib2wnIHx8XG4gICAgKGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT0gc3ltYm9sVGFnKTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgbnVtYmVyLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBwcm9jZXNzLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgbnVtYmVyLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnRvTnVtYmVyKDMuMik7XG4gKiAvLyA9PiAzLjJcbiAqXG4gKiBfLnRvTnVtYmVyKE51bWJlci5NSU5fVkFMVUUpO1xuICogLy8gPT4gNWUtMzI0XG4gKlxuICogXy50b051bWJlcihJbmZpbml0eSk7XG4gKiAvLyA9PiBJbmZpbml0eVxuICpcbiAqIF8udG9OdW1iZXIoJzMuMicpO1xuICogLy8gPT4gMy4yXG4gKi9cbmZ1bmN0aW9uIHRvTnVtYmVyKHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgaWYgKGlzU3ltYm9sKHZhbHVlKSkge1xuICAgIHJldHVybiBOQU47XG4gIH1cbiAgaWYgKGlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHZhciBvdGhlciA9IHR5cGVvZiB2YWx1ZS52YWx1ZU9mID09ICdmdW5jdGlvbicgPyB2YWx1ZS52YWx1ZU9mKCkgOiB2YWx1ZTtcbiAgICB2YWx1ZSA9IGlzT2JqZWN0KG90aGVyKSA/IChvdGhlciArICcnKSA6IG90aGVyO1xuICB9XG4gIGlmICh0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IDAgPyB2YWx1ZSA6ICt2YWx1ZTtcbiAgfVxuICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UocmVUcmltLCAnJyk7XG4gIHZhciBpc0JpbmFyeSA9IHJlSXNCaW5hcnkudGVzdCh2YWx1ZSk7XG4gIHJldHVybiAoaXNCaW5hcnkgfHwgcmVJc09jdGFsLnRlc3QodmFsdWUpKVxuICAgID8gZnJlZVBhcnNlSW50KHZhbHVlLnNsaWNlKDIpLCBpc0JpbmFyeSA/IDIgOiA4KVxuICAgIDogKHJlSXNCYWRIZXgudGVzdCh2YWx1ZSkgPyBOQU4gOiArdmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRlYm91bmNlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2xvZGFzaC5kZWJvdW5jZS9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _isMobile = __webpack_require__(1);\n\nvar _isMobile2 = _interopRequireDefault(_isMobile);\n\nvar _loadData = __webpack_require__(0);\n\nvar _loadData2 = _interopRequireDefault(_loadData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar bodySel = d3.select('body');\n// import graphic from './graphic'\n// D3 is included by globally by default\n\nvar previousWidth = 0;\n\n// function resize() {\n// \tconst width = bodySel.node().offsetWidth\n// \tif (previousWidth !== width) {\n// \t\tpreviousWidth = width\n// \t\tgraphic.resize()\n// \t}\n// }\n\nfunction init() {\n\t// add mobile class to body tag\n\tbodySel.classed('is-mobile', _isMobile2.default.any());\n\t// setup resize event\n\t// window.addEventListener('resize', debounce(resize, 150))\n\t_loadData2.default.init();\n}\n\ninit();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvZW50cnkuanM/YjE2NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEMyBpcyBpbmNsdWRlZCBieSBnbG9iYWxseSBieSBkZWZhdWx0XG5pbXBvcnQgZGVib3VuY2UgZnJvbSAnbG9kYXNoLmRlYm91bmNlJ1xuaW1wb3J0IGlzTW9iaWxlIGZyb20gJy4vdXRpbHMvaXMtbW9iaWxlJ1xuLy8gaW1wb3J0IGdyYXBoaWMgZnJvbSAnLi9ncmFwaGljJ1xuaW1wb3J0IGxvYWREYXRhIGZyb20gJy4vbG9hZC1kYXRhJ1xuXG5jb25zdCBib2R5U2VsID0gZDMuc2VsZWN0KCdib2R5JylcbmxldCBwcmV2aW91c1dpZHRoID0gMFxuXG4vLyBmdW5jdGlvbiByZXNpemUoKSB7XG4vLyBcdGNvbnN0IHdpZHRoID0gYm9keVNlbC5ub2RlKCkub2Zmc2V0V2lkdGhcbi8vIFx0aWYgKHByZXZpb3VzV2lkdGggIT09IHdpZHRoKSB7XG4vLyBcdFx0cHJldmlvdXNXaWR0aCA9IHdpZHRoXG4vLyBcdFx0Z3JhcGhpYy5yZXNpemUoKVxuLy8gXHR9XG4vLyB9XG5cbmZ1bmN0aW9uIGluaXQoKSB7XG5cdC8vIGFkZCBtb2JpbGUgY2xhc3MgdG8gYm9keSB0YWdcblx0Ym9keVNlbC5jbGFzc2VkKCdpcy1tb2JpbGUnLCBpc01vYmlsZS5hbnkoKSlcblx0Ly8gc2V0dXAgcmVzaXplIGV2ZW50XG5cdC8vIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBkZWJvdW5jZShyZXNpemUsIDE1MCkpXG5cdGxvYWREYXRhLmluaXQoKVxufVxuXG5pbml0KClcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvanMvZW50cnkuanMiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQ0E7QUFDQTs7Ozs7QUFDQTtBQUhBO0FBSEE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n// D3 is included by globally by default\n// import * as d3 from 'd3'\n// import loadData from './load-data'\n\nvar states = [[\"Maine\", \"ME\", 1, \"Northeast\", 23], [\"Vermont\", \"VT\", 2, \"Northeast\", 50], [\"New Hampshire\", \"NH\", 3, \"Northeast\", 33], [\"Rhode Island\", \"RI\", 4, \"Northeast\", 44], [\"Massachusetts\", \"MA\", 5, \"Northeast\", 25], [\"Connecticut\", \"CT\", 6, \"Northeast\", 9], [\"Delaware\", \"DE\", 7, \"Northeast\", 10], [\"New Jersey\", \"NJ\", 8, \"Northeast\", 34], [\"New York\", \"NY\", 9, \"Northeast\", 36], [\"Pennsylvania\", \"PA\", 10, \"Northeast\", 42], [\"District of Columbia\", \"DC\", 11, \"Northeast\", 11], [\"Maryland\", \"MD\", 12, \"Northeast\", 24], [\"Virginia\", \"VA\", 13, \"South\", 51], [\"North Carolina\", \"NC\", 14, \"South\", 37], [\"South Carolina\", \"SC\", 15, \"South\", 45], [\"Georgia\", \"GA\", 16, \"South\", 13], [\"Alabama\", \"AL\", 17, \"South\", 1], [\"Mississippi\", \"MS\", 18, \"South\", 28], [\"Louisiana\", \"LA\", 19, \"South\", 22], [\"Arkansas\", \"AR\", 20, \"South\", 5], [\"Tennessee\", \"TN\", 21, \"South\", 47], [\"Kentucky\", \"KY\", 22, \"South\", 21], [\"West Virginia\", \"WV\", 23, \"South\", 54], [\"Oklahoma\", \"OK\", 24, \"Midwest\", 40], [\"Colorado\", \"CO\", 25, \"West\", 8], [\"Utah\", \"UT\", 26, \"West\", 49], [\"Idaho\", \"ID\", 27, \"West\", 16], [\"Wyoming\", \"WY\", 28, \"West\", 56], [\"Montana\", \"MT\", 29, \"West\", 30], [\"North Dakota\", \"ND\", 30, \"Midwest\", 38], [\"South Dakota\", \"SD\", 31, \"Midwest\", 46], [\"Nebraska\", \"NE\", 32, \"Midwest\", 31], [\"Kansas\", \"KS\", 33, \"Midwest\", 20], [\"Iowa\", \"IA\", 34, \"Midwest\", 19], [\"Minnesota\", \"MN\", 35, \"Midwest\", 27], [\"Wisconsin\", \"WI\", 36, \"Midwest\", 55], [\"Indiana\", \"IN\", 37, \"Midwest\", 18], [\"Missouri\", \"MO\", 38, \"Midwest\", 29], [\"Ohio\", \"OH\", 39, \"Midwest\", 39], [\"Michigan\", \"MI\", 40, \"Midwest\", 26], [\"Illinois\", \"IL\", 41, \"Midwest\", 17], [\"Florida\", \"FL\", 42, \"South\", 12], [\"California\", \"CA\", 43, \"West\", 6], [\"Nevada\", \"NV\", 44, \"West\", 32], [\"Texas\", \"TX\", 45, \"South\", 48], [\"Arizona\", \"AZ\", 46, \"West\", 4], [\"New Mexico\", \"NM\", 47, \"West\", 35], [\"Alaska\", \"AK\", 48, \"West\", 2], [\"Washington\", \"WA\", 49, \"West\", 53], [\"Oregon\", \"OR\", 50, \"West\", 41], [\"Hawaii\", \"HI\", 51, \"West\", 15]];\n\nfunction init(mapData, latLongData, newsIDLocation) {\n\n\tvar cut = \"gender\";\n\t// var cut = \"supGender\"\n\n\tfunction getAverage(data) {\n\t\tif (cut == \"gender\") {\n\t\t\treturn d3.mean(data, function (d) {\n\t\t\t\treturn +d.male_num / d.total_num;\n\t\t\t});\n\t\t}\n\t\tif (cut == \"supWhite\") {\n\t\t\treturn d3.mean(data, function (d) {\n\t\t\t\treturn +d.white_sup_num / d.total_sup_num;\n\t\t\t});\n\t\t}\n\t\tif (cut == \"supGender\") {\n\t\t\treturn d3.mean(data, function (d) {\n\t\t\t\treturn +d.male_sup_num / d.total_sup_num;\n\t\t\t});\n\t\t}\n\t\treturn d3.mean(data, function (d) {\n\t\t\treturn +d.white_num / d.total_num;\n\t\t});\n\t}\n\t//\n\tfunction getPercent(data) {\n\t\tif (cut == \"gender\") {\n\t\t\treturn +data.male_num / data.total_num;\n\t\t}\n\t\tif (cut == \"supWhite\") {\n\t\t\treturn +data.white_sup_num / data.total_sup_num;\n\t\t}\n\t\tif (cut == \"supGender\") {\n\t\t\treturn +data.male_sup_num / data.total_sup_num;\n\t\t}\n\t\treturn +data.white_num / data.total_num;\n\t}\n\t//\n\tvar latLongMap = d3.map(latLongData, function (d) {\n\t\treturn d.NewsID;\n\t});\n\tvar newsIdMap = d3.map(newsIDLocation, function (d) {\n\t\treturn d.NewsID;\n\t});\n\n\tvar regionMap = d3.map(states, function (d) {\n\t\treturn d[1];\n\t});\n\n\tvar width = 500;\n\tvar horzScale = d3.scaleLinear().domain([0, 1]).range([0, width]);\n\tvar container = d3.select(\".line-scatter\");\n\n\tvar yearNest = d3.nest().key(function (d) {\n\t\tvar state = null;\n\t\tvar region = null;\n\t\tif (newsIdMap.has(d.NewsID)) {\n\t\t\tstate = newsIdMap.get(d.NewsID).State;\n\t\t}\n\t\tif (regionMap.has(state)) {\n\t\t\tregion = regionMap.get(state)[3];\n\t\t}\n\t\treturn region;\n\t}).key(function (d) {\n\t\treturn +d.Year;\n\t}).sortKeys(function (a, b) {\n\t\treturn a - b;\n\t}).rollup(function (leaves) {\n\t\tvar average = getAverage(leaves);\n\t\treturn { average: average, values: leaves };\n\t}).entries(mapData);\n\n\t//\n\tvar region = container.selectAll(\"div\").data(yearNest).enter().append(\"div\").attr(\"class\", \"year-container\");\n\n\tregion.append(\"p\").text(function (d) {\n\t\treturn d.key;\n\t});\n\n\tvar years = region.selectAll(\"div\").data(function (d) {\n\t\treturn d.values;\n\t}).enter().append(\"div\").attr(\"class\", \"region-container\");\n\n\tyears.selectAll(\"div\").data(function (d) {\n\t\treturn d.value.values;\n\t}).enter().append(\"div\").attr(\"class\", \"line\").style(\"left\", function (d) {\n\t\tvar percent = getPercent(d);\n\t\treturn horzScale(percent) + \"px\";\n\t}).style(\"background-color\", function (d) {\n\t\treturn null;\n\t});\n\tyears.append(\"div\").style(\"left\", function (d) {\n\t\treturn horzScale(.5) + \"px\";\n\t}).attr(\"class\", \"line line-half\");\n\t//\n\tyears.append(\"div\").datum(function (d) {\n\t\treturn d.value.average;\n\t}).style(\"left\", function (d) {\n\t\treturn horzScale(d) + \"px\";\n\t}).attr(\"class\", \"line line-average\").append(\"p\").text(function (d) {\n\t\treturn Math.round(d * 100) + \"%\";\n\t});\n\n\tyears.append(\"p\").text(function (d) {\n\t\treturn d.key;\n\t});\n}\n\nexports.default = { init: init };//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// D3 is included by globally by default\n// import * as d3 from 'd3'\n// import loadData from './load-data'\n\nvar states = [[\"Maine\", \"ME\", 1, \"Northeast\", 23], [\"Vermont\", \"VT\", 2, \"Northeast\", 50], [\"New Hampshire\", \"NH\", 3, \"Northeast\", 33], [\"Rhode Island\", \"RI\", 4, \"Northeast\", 44], [\"Massachusetts\", \"MA\", 5, \"Northeast\", 25], [\"Connecticut\", \"CT\", 6, \"Northeast\", 9], [\"Delaware\", \"DE\", 7, \"Northeast\", 10], [\"New Jersey\", \"NJ\", 8, \"Northeast\", 34], [\"New York\", \"NY\", 9, \"Northeast\", 36], [\"Pennsylvania\", \"PA\", 10, \"Northeast\", 42], [\"District of Columbia\", \"DC\", 11, \"Northeast\", 11], [\"Maryland\", \"MD\", 12, \"Northeast\", 24], [\"Virginia\", \"VA\", 13, \"South\", 51], [\"North Carolina\", \"NC\", 14, \"South\", 37], [\"South Carolina\", \"SC\", 15, \"South\", 45], [\"Georgia\", \"GA\", 16, \"South\", 13], [\"Alabama\", \"AL\", 17, \"South\", 1], [\"Mississippi\", \"MS\", 18, \"South\", 28], [\"Louisiana\", \"LA\", 19, \"South\", 22], [\"Arkansas\", \"AR\", 20, \"South\", 5], [\"Tennessee\", \"TN\", 21, \"South\", 47], [\"Kentucky\", \"KY\", 22, \"South\", 21], [\"West Virginia\", \"WV\", 23, \"South\", 54], [\"Oklahoma\", \"OK\", 24, \"Midwest\", 40], [\"Colorado\", \"CO\", 25, \"West\", 8], [\"Utah\", \"UT\", 26, \"West\", 49], [\"Idaho\", \"ID\", 27, \"West\", 16], [\"Wyoming\", \"WY\", 28, \"West\", 56], [\"Montana\", \"MT\", 29, \"West\", 30], [\"North Dakota\", \"ND\", 30, \"Midwest\", 38], [\"South Dakota\", \"SD\", 31, \"Midwest\", 46], [\"Nebraska\", \"NE\", 32, \"Midwest\", 31], [\"Kansas\", \"KS\", 33, \"Midwest\", 20], [\"Iowa\", \"IA\", 34, \"Midwest\", 19], [\"Minnesota\", \"MN\", 35, \"Midwest\", 27], [\"Wisconsin\", \"WI\", 36, \"Midwest\", 55], [\"Indiana\", \"IN\", 37, \"Midwest\", 18], [\"Missouri\", \"MO\", 38, \"Midwest\", 29], [\"Ohio\", \"OH\", 39, \"Midwest\", 39], [\"Michigan\", \"MI\", 40, \"Midwest\", 26], [\"Illinois\", \"IL\", 41, \"Midwest\", 17], [\"Florida\", \"FL\", 42, \"South\", 12], [\"California\", \"CA\", 43, \"West\", 6], [\"Nevada\", \"NV\", 44, \"West\", 32], [\"Texas\", \"TX\", 45, \"South\", 48], [\"Arizona\", \"AZ\", 46, \"West\", 4], [\"New Mexico\", \"NM\", 47, \"West\", 35], [\"Alaska\", \"AK\", 48, \"West\", 2], [\"Washington\", \"WA\", 49, \"West\", 53], [\"Oregon\", \"OR\", 50, \"West\", 41], [\"Hawaii\", \"HI\", 51, \"West\", 15]];\n\nfunction init(mapData, latLongData, newsIDLocation, newsIDInfo) {\n\n  var cut = \"gender\";\n  // var cut = \"supGender\"\n  var countMin = 50;\n\n  function getAverage(data) {\n    if (cut == \"gender\") {\n      return d3.mean(data, function (d) {\n        return +d.male_num / d.total_num;\n      });\n    }\n    if (cut == \"supWhite\") {\n      return d3.mean(data, function (d) {\n        return +d.white_sup_num / d.total_sup_num;\n      });\n    }\n    if (cut == \"supGender\") {\n      return d3.mean(data, function (d) {\n        return +d.male_sup_num / d.total_sup_num;\n      });\n    }\n    return d3.mean(data, function (d) {\n      return +d.white_num / d.total_num;\n    });\n  }\n\n  function getPercent(data) {\n    if (cut == \"gender\") {\n      return +data.male_num / data.total_num;\n    }\n    if (cut == \"supWhite\") {\n      return +data.white_sup_num / data.total_sup_num;\n    }\n    if (cut == \"supGender\") {\n      return +data.male_sup_num / data.total_sup_num;\n    }\n    return +data.white_num / data.total_num;\n  }\n\n  var latLongMap = d3.map(latLongData, function (d) {\n    return d.NewsID;\n  });\n  var newsIdMap = d3.map(newsIDLocation, function (d) {\n    return d.NewsID;\n  });\n  var newsIDName = d3.map(newsIDInfo, function (d) {\n    return d.NewsID;\n  });\n  var regionMap = d3.map(states, function (d) {\n    return d[1];\n  });\n\n  var width = 1000;\n  var horzScale = d3.scaleLinear().domain([0, 1]).range([0, width]);\n  var container = d3.select(\".histogram\");\n\n  var toggles = container.append(\"div\").attr(\"class\", \"histogram-chart-toggle-wrapper\");\n\n  toggles.append(\"div\").attr(\"class\", \"histogram-chart-toggle-size\").selectAll(\"p\").data([0, 20, 50, 100, 500]).enter().append(\"p\").attr(\"class\", \"histogram-chart-toggle-item\").text(function (d) {\n    return d;\n  }).on(\"click\", function (d) {\n    countMin = d;\n    buildChart();\n  });\n\n  toggles.append(\"div\").attr(\"class\", \"histogram-chart-toggle-type\").selectAll(\"p\").data([\"race\", \"gender\", \"supWhite\", \"supGender\"]).enter().append(\"p\").attr(\"class\", \"histogram-chart-toggle-item\").text(function (d) {\n    return d;\n  }).on(\"click\", function (d) {\n    cut = d;\n    buildChart();\n  });\n\n  function buildChart() {\n\n    var filteredMapData = mapData.filter(function (d) {\n      if (cut == \"supWhite\" || cut == \"supGender\") {\n        return d.total_num > countMin && d.total_sup_num > 0;\n      }\n      return d.total_num > countMin;\n    });\n\n    d3.selectAll(\".histogram-chart-wrapper\").remove();\n\n    var chartDiv = container.append(\"div\").attr(\"class\", \"histogram-chart-wrapper\");\n\n    var yearNest = d3.nest().key(function (d) {\n      return +d.Year;\n    }).rollup(function (leaves) {\n      var average = getAverage(leaves);\n      return { average: average, values: leaves };\n    }).entries(filteredMapData);\n\n    var dataToMap = yearNest.filter(function (d) {\n      return d.key == 2014;\n    })[0].value;\n\n    dataToMap.values = d3.nest().key(function (d) {\n      return Math.round(getPercent(d) * 50) / 50;\n    }).sortKeys(function (a, b) {\n      return a - b;\n    })\n    // .rollup(function(leaves){\n    //   var average = getAverage(leaves);\n    //   return {average:average,values:leaves};\n    // })\n    .entries(dataToMap.values);\n\n    chartDiv.append(\"div\").attr(\"class\", \"histogram-avg-div\").style(\"left\", function (d) {\n      return dataToMap.average * width + 1 + \"px\";\n    }).append(\"p\").text(Math.round(dataToMap.average * 100) + \"%\");\n\n    var yearsColumn = chartDiv.selectAll(\".histogram-year-container\").data(dataToMap.values).enter().append(\"div\").attr(\"class\", \"histogram-year-container\").style(\"left\", function (d) {\n      return d.key * width + 1 + \"px\";\n    });\n    //\n    yearsColumn.selectAll(\"div\").data(function (d) {\n      return d.values;\n    }).enter().append(\"div\").attr(\"class\", function (d) {\n      var state = null;\n      var region = null;\n      if (newsIdMap.has(d.NewsID)) {\n        state = newsIdMap.get(d.NewsID).State;\n      }\n      if (regionMap.has(state)) {\n        region = regionMap.get(state)[3];\n      }\n\n      if (region == \"West\") {\n        region = \"green\";\n      }\n      if (region == \"South\") {\n        region = \"blue\";\n      }\n      if (region == \"Midwest\") {\n        region = \"purple\";\n      }\n      if (region == \"Northeast\") {\n        region = \"yellow\";\n      }\n      return \"histogram-year-item \" + region;\n    }).style(\"background-color\", function (d) {\n      // return backgroundFunction(d)\n      return null;\n    }).on(\"mouseover\", function (d) {\n      console.log(newsIDName.get(d.NewsID).Company);\n    });\n\n    yearsColumn.append(\"p\").text(function (d, i) {\n      if (i % 5 == 0 || i == 0 || i == yearsColumn.size() - 1) {\n        return Math.round(d.key * 100) + \"%\";\n      }\n      return null;\n    });\n  }\n  function backgroundFunction(d) {\n    var state = null;\n    var region = null;\n    if (newsIdMap.has(d.NewsID)) {\n      state = newsIdMap.get(d.NewsID).State;\n    }\n    if (regionMap.has(state)) {\n      region = regionMap.get(state)[3];\n    }\n    if (region == \"West\") {\n      return \"green\";\n    }\n    if (region == \"South\") {\n      return \"blue\";\n    }\n    if (region == \"Midwest\") {\n      return \"purple\";\n    }\n    if (region == \"Northeast\") {\n      return \"yellow\";\n    }\n  }\n  buildChart();\n}\n\nexports.default = { init: init };//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n// D3 is included by globally by default\n\nvar dataset;\n\nvar fields = [\"NLWhM\", \"NLWhF\", \"AOJWhM\", \"AOJWhF\", \"NLBlM\", \"NLBlF\", \"AOJBlM\", \"AOJBlF\", \"NLHispM\", \"NLHispF\", \"AOJHispM\", \"AOJHispF\", \"NLNAM\", \"NLNAF\", \"AOJNAM\", \"AOJNAF\", \"NLAsM\", \"NLAsF\", \"AOJAsM\", \"AOJAsF\", \"NLOthM\", \"NLOthF\", \"AOJOthM\", \"AOJOthF\"];\n\nvar yLabels = [\"White\", \"Black\", \"Hispanic\", \"Native Amer\", \"Asian\", \"Other\"];\n\nvar xLabels = [\"Male Leaders\", \"Female Leaders\", \"Male Employees\", \"Female Employees\"];\n\nvar rowYCoord = [0, 151, 206, 261, 316, 371];\nvar svg;\n\nfunction init() {\n\t// initialize the data\n\n\td3.csv(\"/assets/allbreakdowns.csv\", function (data) {\n\t\tdataset = data;\n\t\tdata.forEach(function (d) {\n\t\t\tfor (var property in d) {\n\t\t\t\tif (d.hasOwnProperty(property)) {\n\t\t\t\t\td[property] = parseFloat(d[property]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tgenerateVis();\n\t});\n}\n\nfunction generateVis() {\n\tvar w = 500;\n\tvar h = 600;\n\n\tsvg = d3.select(\"#newsroom\").append(\"svg\").attr(\"width\", w).attr(\"height\", h);\n\n\tdrawLabels(w);\n\tdrawCirclesPerYear(0);\n}\n\nfunction drawLabels(w) {\n\tsvg.append(\"rect\").attr(\"fill\", \"#eee\").attr(\"x\", 0).attr(\"y\", rowYCoord[1] + 10).attr(\"width\", w).attr(\"height\", 55);\n\n\tsvg.append(\"rect\").attr(\"fill\", \"#eee\").attr(\"x\", 0).attr(\"y\", rowYCoord[3] + 10).attr(\"width\", w).attr(\"height\", 55);\n\n\tsvg.append(\"rect\").attr(\"fill\", \"#eee\").attr(\"x\", 0).attr(\"y\", rowYCoord[5] + 10).attr(\"width\", w).attr(\"height\", 55);\n\n\tfor (var x = 0; x < yLabels.length; x++) {\n\t\tsvg.append(\"text\").text(yLabels[x]).attr(\"x\", 11).attr(\"y\", 40 + rowYCoord[x]).attr(\"font-size\", 11);\n\t}\n\n\tfor (var y = 0; y <= xLabels.length + 1; y++) {\n\t\tvar columnXCoord = 75 + 100 * y;\n\t\tsvg.append(\"text\").text(xLabels[y]).attr(\"x\", columnXCoord).attr(\"y\", 11).attr(\"font-size\", 11);\n\t}\n}\n\nfunction drawCirclesPerYear(year) {\n\tvar circleGroup = svg.append(\"g\").attr(\"id\", \"circles\");\n\tvar radius = 5;\n\tvar circleMargin = 2;\n\tvar xOffset = 75;\n\tvar yOffset = 30;\n\tvar fieldXSpacing = radius * 21;\n\tvar fieldYSpacing = 20;\n\tvar lastY = 0;\n\tvar tempLastY = 0; // keeps track of the last Y coordinate in the male column for comparison to the last Y coordinate in the female column so that the next field starts at the right Y value\n\tvar numColumns = 4;\n\n\td3.select(\"#year\").text(\"The Newsroom in \" + (year + 2001));\n\n\tfor (var j = 0; j < fields.length; j++) {\n\t\tvar fieldY = rowYCoord[Math.floor(j / numColumns)];\n\n\t\tvar numCircles = Math.ceil(dataset[year][fields[j]]) - 1;\n\n\t\td3.range(numCircles + 1).forEach(function (i) {\n\t\t\tif (numCircles > 0) {\n\t\t\t\tvar y = yOffset + radius + fieldY + Math.floor(i / 5) * (radius * 2 + circleMargin);\n\t\t\t\tif (j % 2) {\n\t\t\t\t\tvar color = \"blue\";\n\t\t\t\t} else {\n\t\t\t\t\tvar color = \"red\";\n\t\t\t\t}\n\t\t\t\t// set color of circles and Y val\n\t\t\t\tif (j % numColumns < numColumns - 1) {\n\t\t\t\t\tif (y > tempLastY) tempLastY = y;\n\t\t\t\t} else {\n\t\t\t\t\tif (tempLastY > y) {\n\t\t\t\t\t\tlastY = tempLastY + fieldYSpacing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastY = y + fieldYSpacing;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcircleGroup.append(\"circle\").attr(\"fill\", color).attr(\"cx\", xOffset + radius + i % 5 * (radius * 2 + circleMargin) + j % numColumns * fieldXSpacing).attr(\"cy\", y).attr(\"r\", radius);\n\t\t\t}\n\t\t});\n\t}\n\n\tif (year < 15) {\n\t\tsleep(1000).then(function () {\n\t\t\td3.select(\"#circles\").remove();\n\t\t\tdrawCirclesPerYear(year + 1);\n\t\t});\n\t} else {\n\t\tsleep(1000).then(function () {\n\t\t\td3.select(\"#circles\").remove();\n\t\t\tdrawCirclesPerYear(0);\n\t\t});\n\t}\n}\n\n// sleep time expects milliseconds\nfunction sleep(time) {\n\treturn new Promise(function (resolve) {\n\t\treturn setTimeout(resolve, time);\n\t});\n}\n\nexports.default = { init: init };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvanMvbmV3c3Jvb20uanM/MjY1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEMyBpcyBpbmNsdWRlZCBieSBnbG9iYWxseSBieSBkZWZhdWx0XG5cbnZhciBkYXRhc2V0O1xuXG52YXIgZmllbGRzID0gW1wiTkxXaE1cIixcIk5MV2hGXCIsXCJBT0pXaE1cIixcIkFPSldoRlwiLFxuXCJOTEJsTVwiLFwiTkxCbEZcIixcIkFPSkJsTVwiLFwiQU9KQmxGXCIsXG5cIk5MSGlzcE1cIixcIk5MSGlzcEZcIixcIkFPSkhpc3BNXCIsXCJBT0pIaXNwRlwiLFxuXCJOTE5BTVwiLFwiTkxOQUZcIixcIkFPSk5BTVwiLFwiQU9KTkFGXCIsXG5cIk5MQXNNXCIsXCJOTEFzRlwiLFwiQU9KQXNNXCIsXCJBT0pBc0ZcIixcblwiTkxPdGhNXCIsXCJOTE90aEZcIixcIkFPSk90aE1cIixcIkFPSk90aEZcIl07XG5cbnZhciB5TGFiZWxzID0gW1wiV2hpdGVcIiwgXCJCbGFja1wiLCBcIkhpc3BhbmljXCIsIFwiTmF0aXZlIEFtZXJcIiwgXCJBc2lhblwiLCBcIk90aGVyXCJdO1xuXG52YXIgeExhYmVscyA9IFtcIk1hbGUgTGVhZGVyc1wiLCBcIkZlbWFsZSBMZWFkZXJzXCIsIFwiTWFsZSBFbXBsb3llZXNcIiwgXCJGZW1hbGUgRW1wbG95ZWVzXCJdO1xuXG52YXIgcm93WUNvb3JkID0gWzAsIDE1MSwgMjA2LCAyNjEsIDMxNiwgMzcxXTtcbnZhciBzdmc7XG5cbmZ1bmN0aW9uIGluaXQoKSB7XG5cdC8vIGluaXRpYWxpemUgdGhlIGRhdGFcblxuXHRkMy5jc3YoXCIvYXNzZXRzL2FsbGJyZWFrZG93bnMuY3N2XCIsIGZ1bmN0aW9uKGRhdGEpIHtcblx0XHRkYXRhc2V0ID0gZGF0YTtcblx0XHRkYXRhLmZvckVhY2goZnVuY3Rpb24oZCkge1xuXHRcdFx0Zm9yICh2YXIgcHJvcGVydHkgaW4gZCkge1xuXHRcdFx0XHRpZiAoZC5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcblx0XHRcdFx0XHRkW3Byb3BlcnR5XSA9IHBhcnNlRmxvYXQoZFtwcm9wZXJ0eV0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0Z2VuZXJhdGVWaXMoKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlVmlzKCkge1xuXHR2YXIgdyA9IDUwMDtcblx0dmFyIGggPSA2MDA7XG5cblx0c3ZnID0gZDMuc2VsZWN0KFwiI25ld3Nyb29tXCIpXG5cdC5hcHBlbmQoXCJzdmdcIilcblx0LmF0dHIoXCJ3aWR0aFwiLCB3KVxuXHQuYXR0cihcImhlaWdodFwiLCBoKTtcblxuXHRkcmF3TGFiZWxzKHcpO1xuXHRkcmF3Q2lyY2xlc1BlclllYXIoMCk7XG59XG5cbmZ1bmN0aW9uIGRyYXdMYWJlbHModykge1xuXHRzdmcuYXBwZW5kKFwicmVjdFwiKVxuXHRcdC5hdHRyKFwiZmlsbFwiLCBcIiNlZWVcIilcblx0XHQuYXR0cihcInhcIiwgMClcblx0XHQuYXR0cihcInlcIiwgcm93WUNvb3JkWzFdICsgMTApXG5cdFx0LmF0dHIoXCJ3aWR0aFwiLCB3KVxuXHRcdC5hdHRyKFwiaGVpZ2h0XCIsIDU1KTtcblxuXHRzdmcuYXBwZW5kKFwicmVjdFwiKVxuXHRcdC5hdHRyKFwiZmlsbFwiLCBcIiNlZWVcIilcblx0XHQuYXR0cihcInhcIiwgMClcblx0XHQuYXR0cihcInlcIiwgcm93WUNvb3JkWzNdICsgMTApXG5cdFx0LmF0dHIoXCJ3aWR0aFwiLCB3KVxuXHRcdC5hdHRyKFwiaGVpZ2h0XCIsIDU1KTtcblxuXHRzdmcuYXBwZW5kKFwicmVjdFwiKVxuXHRcdC5hdHRyKFwiZmlsbFwiLCBcIiNlZWVcIilcblx0XHQuYXR0cihcInhcIiwgMClcblx0XHQuYXR0cihcInlcIiwgcm93WUNvb3JkWzVdICsgMTApXG5cdFx0LmF0dHIoXCJ3aWR0aFwiLCB3KVxuXHRcdC5hdHRyKFwiaGVpZ2h0XCIsIDU1KTtcblxuXG5cdGZvciAodmFyIHggPSAwIDsgeCA8IHlMYWJlbHMubGVuZ3RoOyB4KyspIHtcblx0XHRzdmcuYXBwZW5kKFwidGV4dFwiKVxuXHRcdFx0LnRleHQoeUxhYmVsc1t4XSlcblx0XHRcdC5hdHRyKFwieFwiLCAxMSlcblx0XHRcdC5hdHRyKFwieVwiLCA0MCArIHJvd1lDb29yZFt4XSlcblx0XHRcdC5hdHRyKFwiZm9udC1zaXplXCIsIDExKVxuXHR9XG5cblx0Zm9yICh2YXIgeSA9IDAgOyB5IDw9IHhMYWJlbHMubGVuZ3RoICsgMTsgeSsrKSB7XG5cdFx0dmFyIGNvbHVtblhDb29yZCA9IDc1ICsgMTAwICogeTtcblx0XHRzdmcuYXBwZW5kKFwidGV4dFwiKVxuXHRcdFx0LnRleHQoeExhYmVsc1t5XSlcblx0XHRcdC5hdHRyKFwieFwiLCBjb2x1bW5YQ29vcmQpXG5cdFx0XHQuYXR0cihcInlcIiwgMTEpXG5cdFx0XHQuYXR0cihcImZvbnQtc2l6ZVwiLCAxMSlcblx0fVxufVxuXG5mdW5jdGlvbiBkcmF3Q2lyY2xlc1BlclllYXIoeWVhcikge1xuXHR2YXIgY2lyY2xlR3JvdXAgPSBzdmcuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiaWRcIiwgXCJjaXJjbGVzXCIpO1xuXHR2YXIgcmFkaXVzID0gNTtcblx0dmFyIGNpcmNsZU1hcmdpbiA9IDI7XG5cdHZhciB4T2Zmc2V0ID0gNzU7XG5cdHZhciB5T2Zmc2V0ID0gMzA7XG5cdHZhciBmaWVsZFhTcGFjaW5nID0gcmFkaXVzICogMjE7XG5cdHZhciBmaWVsZFlTcGFjaW5nID0gMjA7XG5cdHZhciBsYXN0WSA9IDA7XG5cdHZhciB0ZW1wTGFzdFkgPSAwOyAvLyBrZWVwcyB0cmFjayBvZiB0aGUgbGFzdCBZIGNvb3JkaW5hdGUgaW4gdGhlIG1hbGUgY29sdW1uIGZvciBjb21wYXJpc29uIHRvIHRoZSBsYXN0IFkgY29vcmRpbmF0ZSBpbiB0aGUgZmVtYWxlIGNvbHVtbiBzbyB0aGF0IHRoZSBuZXh0IGZpZWxkIHN0YXJ0cyBhdCB0aGUgcmlnaHQgWSB2YWx1ZVxuXHR2YXIgbnVtQ29sdW1ucyA9IDQ7XG5cblx0ZDMuc2VsZWN0KFwiI3llYXJcIikudGV4dChcIlRoZSBOZXdzcm9vbSBpbiBcIiArICh5ZWFyICsgMjAwMSkpO1xuXG5cdGZvciAodmFyIGogPSAwOyBqIDwgZmllbGRzLmxlbmd0aDsgaisrKSB7XG5cdFx0dmFyIGZpZWxkWSA9IHJvd1lDb29yZFtNYXRoLmZsb29yKGogLyBudW1Db2x1bW5zKV07XG5cblx0XHR2YXIgbnVtQ2lyY2xlcyA9IE1hdGguY2VpbChkYXRhc2V0W3llYXJdW2ZpZWxkc1tqXV0pLTE7XG5cblx0XHRkMy5yYW5nZShudW1DaXJjbGVzICsgMSkuZm9yRWFjaChmdW5jdGlvbihpKSB7XG5cdFx0XHRpZiAobnVtQ2lyY2xlcyA+IDApIHtcblx0XHRcdFx0dmFyIHkgPSB5T2Zmc2V0ICsgcmFkaXVzICsgZmllbGRZICsgTWF0aC5mbG9vcihpIC8gNSkgKiAocmFkaXVzICogMiArIGNpcmNsZU1hcmdpbik7XG5cdFx0XHRcdGlmIChqICUgMikge1xuXHRcdFx0XHRcdHZhciBjb2xvciA9IFwiYmx1ZVwiO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHZhciBjb2xvciA9IFwicmVkXCI7XG5cdFx0XHRcdH1cblx0XHRcdC8vIHNldCBjb2xvciBvZiBjaXJjbGVzIGFuZCBZIHZhbFxuXHRcdFx0aWYgKChqICUgbnVtQ29sdW1ucykgPCBudW1Db2x1bW5zIC0gMSkge1xuXHRcdFx0XHRpZiAoeSA+IHRlbXBMYXN0WSkgdGVtcExhc3RZID0geTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlmICh0ZW1wTGFzdFkgPiB5KSB7XG5cdFx0XHRcdFx0bGFzdFkgPSB0ZW1wTGFzdFkgKyBmaWVsZFlTcGFjaW5nO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGxhc3RZID0geSArIGZpZWxkWVNwYWNpbmc7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Y2lyY2xlR3JvdXAuYXBwZW5kKFwiY2lyY2xlXCIpXG5cdFx0XHQuYXR0cihcImZpbGxcIiwgY29sb3IpXG5cdFx0XHQuYXR0cihcImN4XCIsIHhPZmZzZXQgKyByYWRpdXMgKyAoaSAlIDUpICogKHJhZGl1cyAqIDIgKyBjaXJjbGVNYXJnaW4pICsgKGogJSBudW1Db2x1bW5zKSAqIGZpZWxkWFNwYWNpbmcpXG5cdFx0XHQuYXR0cihcImN5XCIsIHkpXG5cdFx0XHQuYXR0cihcInJcIiwgcmFkaXVzKVxuXHRcdH1cblx0fSk7XG5cdH1cblxuXHRpZiAoeWVhciA8IDE1KSB7XG5cdFx0c2xlZXAoMTAwMCkudGhlbigoKSA9PiB7XG5cdFx0XHRkMy5zZWxlY3QoXCIjY2lyY2xlc1wiKS5yZW1vdmUoKTtcbiAgICBcdGRyYXdDaXJjbGVzUGVyWWVhcih5ZWFyICsgMSlcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHRzbGVlcCgxMDAwKS50aGVuKCgpID0+IHtcblx0XHRcdGQzLnNlbGVjdChcIiNjaXJjbGVzXCIpLnJlbW92ZSgpO1xuICAgIFx0ZHJhd0NpcmNsZXNQZXJZZWFyKDApXG5cdFx0fSk7XG5cdH1cbn1cblxuLy8gc2xlZXAgdGltZSBleHBlY3RzIG1pbGxpc2Vjb25kc1xuZnVuY3Rpb24gc2xlZXAgKHRpbWUpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIHRpbWUpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgeyBpbml0IH1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvanMvbmV3c3Jvb20uanMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQU1BO0FBQ0E7QUFPQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar states = [[\"Maine\", \"ME\", 1, \"Northeast\", 23], [\"Vermont\", \"VT\", 2, \"Northeast\", 50], [\"New Hampshire\", \"NH\", 3, \"Northeast\", 33], [\"Rhode Island\", \"RI\", 4, \"Northeast\", 44], [\"Massachusetts\", \"MA\", 5, \"Northeast\", 25], [\"Connecticut\", \"CT\", 6, \"Northeast\", 9], [\"Delaware\", \"DE\", 7, \"Northeast\", 10], [\"New Jersey\", \"NJ\", 8, \"Northeast\", 34], [\"New York\", \"NY\", 9, \"Northeast\", 36], [\"Pennsylvania\", \"PA\", 10, \"Northeast\", 42], [\"District of Columbia\", \"DC\", 11, \"Northeast\", 11], [\"Maryland\", \"MD\", 12, \"Northeast\", 24], [\"Virginia\", \"VA\", 13, \"South\", 51], [\"North Carolina\", \"NC\", 14, \"South\", 37], [\"South Carolina\", \"SC\", 15, \"South\", 45], [\"Georgia\", \"GA\", 16, \"South\", 13], [\"Alabama\", \"AL\", 17, \"South\", 1], [\"Mississippi\", \"MS\", 18, \"South\", 28], [\"Louisiana\", \"LA\", 19, \"South\", 22], [\"Arkansas\", \"AR\", 20, \"South\", 5], [\"Tennessee\", \"TN\", 21, \"South\", 47], [\"Kentucky\", \"KY\", 22, \"South\", 21], [\"West Virginia\", \"WV\", 23, \"South\", 54], [\"Oklahoma\", \"OK\", 24, \"Midwest\", 40], [\"Colorado\", \"CO\", 25, \"West\", 8], [\"Utah\", \"UT\", 26, \"West\", 49], [\"Idaho\", \"ID\", 27, \"West\", 16], [\"Wyoming\", \"WY\", 28, \"West\", 56], [\"Montana\", \"MT\", 29, \"West\", 30], [\"North Dakota\", \"ND\", 30, \"Midwest\", 38], [\"South Dakota\", \"SD\", 31, \"Midwest\", 46], [\"Nebraska\", \"NE\", 32, \"Midwest\", 31], [\"Kansas\", \"KS\", 33, \"Midwest\", 20], [\"Iowa\", \"IA\", 34, \"Midwest\", 19], [\"Minnesota\", \"MN\", 35, \"Midwest\", 27], [\"Wisconsin\", \"WI\", 36, \"Midwest\", 55], [\"Indiana\", \"IN\", 37, \"Midwest\", 18], [\"Missouri\", \"MO\", 38, \"Midwest\", 29], [\"Ohio\", \"OH\", 39, \"Midwest\", 39], [\"Michigan\", \"MI\", 40, \"Midwest\", 26], [\"Illinois\", \"IL\", 41, \"Midwest\", 17], [\"Florida\", \"FL\", 42, \"South\", 12], [\"California\", \"CA\", 43, \"West\", 6], [\"Nevada\", \"NV\", 44, \"West\", 32], [\"Texas\", \"TX\", 45, \"South\", 48], [\"Arizona\", \"AZ\", 46, \"West\", 4], [\"New Mexico\", \"NM\", 47, \"West\", 35], [\"Alaska\", \"AK\", 48, \"West\", 2], [\"Washington\", \"WA\", 49, \"West\", 53], [\"Oregon\", \"OR\", 50, \"West\", 41], [\"Hawaii\", \"HI\", 51, \"West\", 15]];\n\nfunction init(mapData, latLongData, newsIDLocation, newsIDInfo) {\n\n  var cut = \"gender\";\n  // var cut = \"supGender\"\n  var countMin = 100;\n\n  function getAverage(data) {\n    if (cut == \"gender\") {\n      var mean = d3.mean(data, function (d) {\n        return +d.male_num / d.total_num;\n      });\n      console.log(mean);\n      return mean;\n    }\n    if (cut == \"supWhite\") {\n      return d3.mean(data, function (d) {\n        return +d.white_sup_num / d.total_sup_num;\n      });\n    }\n    if (cut == \"supGender\") {\n      return d3.mean(data, function (d) {\n        return +d.male_sup_num / d.total_sup_num;\n      });\n    }\n    return d3.mean(data, function (d) {\n      return +d.white_num / d.total_num;\n    });\n  }\n\n  function getPercent(data) {\n    if (cut == \"gender\") {\n      return +data.male_num / data.total_num;\n    }\n    if (cut == \"supWhite\") {\n      return +data.white_sup_num / data.total_sup_num;\n    }\n    if (cut == \"supGender\") {\n      return +data.male_sup_num / data.total_sup_num;\n    }\n    return +data.white_num / data.total_num;\n  }\n\n  var latLongMap = d3.map(latLongData, function (d) {\n    return d.NewsID;\n  });\n  var newsIdMap = d3.map(newsIDLocation, function (d) {\n    return d.NewsID;\n  });\n  var newsIDName = d3.map(newsIDInfo, function (d) {\n    return d.NewsID;\n  });\n  var regionMap = d3.map(states, function (d) {\n    return d[1];\n  });\n\n  var margin = { top: 40, right: 40, bottom: 40, left: 40 };\n  var width = 1000 - margin.left - margin.right;\n  var height = 500 - margin.top - margin.bottom;\n  var horzScale = d3.scaleLinear().domain([0, 1]).range([0, width]);\n  var container = d3.select(\".scatter\");\n\n  var toggles = container.append(\"div\").attr(\"class\", \"histogram-chart-toggle-wrapper\");\n\n  toggles.append(\"div\").attr(\"class\", \"histogram-chart-toggle-size\").selectAll(\"p\").data([0, 20, 50, 100, 500]).enter().append(\"p\").attr(\"class\", \"histogram-chart-toggle-item\").text(function (d) {\n    return d;\n  }).on(\"click\", function (d) {\n    countMin = d;\n    buildChart();\n  });\n\n  toggles.append(\"div\").attr(\"class\", \"histogram-chart-toggle-type\").selectAll(\"p\").data([\"race\", \"gender\", \"supWhite\", \"supGender\"]).enter().append(\"p\").attr(\"class\", \"histogram-chart-toggle-item\").text(function (d) {\n    return d;\n  }).on(\"click\", function (d) {\n    cut = d;\n    buildChart();\n  });\n\n  var xScale = d3.scaleLinear().domain([.54, .75]).range([0, width]);\n\n  function buildChart() {\n\n    d3.selectAll(\".scatter-chart-wrapper\").remove();\n\n    var chartDiv = container.append(\"svg\").attr(\"class\", \"scatter-chart-wrapper\").attr(\"width\", width).attr(\"height\", height);\n\n    var miniMultiple = container.append(\"div\").attr(\"class\", \"slope-mini-multiple-div\");\n\n    var filteredMapData = mapData.filter(function (d) {\n      if (cut == \"supWhite\" || cut == \"supGender\") {\n        return d.total_num > countMin && d.total_sup_num > 0;\n      }\n      return d.total_num > countMin;\n    });\n\n    var newsNest = d3.nest().key(function (d) {\n      return +d.NewsID;\n    }).rollup(function (leaves) {\n      var map = d3.map(leaves, function (d) {\n        return d.Year;\n      });\n      var maxTotalNum = d3.max(leaves, function (d) {\n        return d.total_num;\n      });\n      return { yearMap: map, values: leaves, maxTotal: maxTotalNum };\n    }).entries(filteredMapData);\n\n    newsNest = newsNest.filter(function (d) {\n      if (d.value.yearMap.has(2014)) {\n        return d;\n      }\n      return null;\n    });\n\n    var totalExtent = d3.extent(newsNest, function (d) {\n      return +d.value.maxTotal;\n    });\n    var radiusScale = d3.scaleLinear().domain(totalExtent).range([5, 30]);\n\n    // function buildAxis(){\n    //  var chartAxis = chartDiv.append(\"g\")\n    //    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    //    .attr(\"class\",\"swarm-axis\")\n    //    ;\n    //\n    //  chartAxis.append(\"g\")\n    //    .append(\"line\")\n    //    .attr(\"x1\",0)\n    //    .attr(\"x2\",\"100%\")\n    //    .attr(\"y1\",height/2)\n    //    .attr(\"y2\",height/2)\n    //    .attr(\"class\",\"swarm-axis-line\")\n    //\n    // }\n    // buildAxis();\n\n    var chartG = chartDiv.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // function buildAverage(){\n    //   var chartAverage = chartDiv.append(\"g\")\n    //      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    //      .attr(\"class\",\"swarm-average\")\n    //      ;\n    //\n    //  chartAverage.append(\"text\")\n    //    .attr(\"class\",\"swarm-average-text swarm-average-text-label\")\n    //    .attr(\"x\",xScale(dataToMap.average))\n    //    .attr(\"y\",height*.33-19)\n    //    .text(\"Overall\")\n    //\n    //   chartAverage.append(\"text\")\n    //     .attr(\"class\",\"swarm-average-text\")\n    //     .attr(\"x\",xScale(dataToMap.average))\n    //     .attr(\"y\",height*.33-5)\n    //     .text(Math.round(dataToMap.average*100)+\"% Male\")\n    //\n    //   chartAverage.append(\"line\")\n    //     .attr(\"class\",\"swarm-average-line\")\n    //     .attr(\"x1\",xScale(dataToMap.average))\n    //     .attr(\"x2\",xScale(dataToMap.average))\n    //     .attr(\"y1\",height*.33)\n    //     .attr(\"y2\",height*.66)\n    //     ;\n    // }\n    // buildAverage();\n\n    var topRowCircle = chartG.append(\"g\").selectAll(\"circle\").data(newsNest).enter().append(\"circle\").attr(\"class\", \"swarm-circle\").attr(\"r\", function (d) {\n      return 3;\n    }).attr(\"cx\", function (d) {\n      return xScale(getPercent(d.value.yearMap.get(2014)));\n    }).attr(\"cy\", function (d) {\n      return 0;\n    }).style(\"fill\", function (d) {\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    }).on(\"mouseover\", function (d) {\n      console.log(d);\n    });\n\n    var bottomRowCircle = chartG.append(\"g\").selectAll(\"circle\").data(newsNest).enter().append(\"circle\").attr(\"class\", \"swarm-circle\").attr(\"r\", function (d) {\n      return 3;\n    }).attr(\"cx\", function (d) {\n      return xScale(getPercent(d.value.values[0]));\n    }).attr(\"cy\", function (d) {\n      return 100;\n    }).style(\"fill\", function (d) {\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    });\n\n    var rowLines = chartG.append(\"g\").selectAll(\"line\").data(newsNest).enter().append(\"line\").attr(\"class\", \"slope-line\").attr(\"x2\", function (d) {\n      return xScale(getPercent(d.value.values[0]));\n    }).attr(\"y2\", function (d) {\n      return 100;\n    }).attr(\"x1\", function (d) {\n      return xScale(getPercent(d.value.yearMap.get(2014)));\n    }).attr(\"y1\", function (d) {\n      return 0;\n    }).style(\"stroke\", function (d) {\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    });\n\n    var miniWidth = 40;\n    var miniHeight = 100;\n\n    var multipleY = d3.scaleLinear().domain([.3, 1]).range([miniHeight, 0]);\n\n    var miniMultipleWrapper = miniMultiple.selectAll(\"div\").data(newsNest).enter().append(\"div\").attr(\"class\", \"mini-multiple-div\");\n\n    miniMultipleWrapper.append(\"p\").attr(\"class\", \"mini-multiple-text\").style(\"margin-top\", 20).text(function (d) {\n      return newsIDName.get(d.value.values[0].NewsID).Company;\n    });\n\n    var miniMultipleWrapperSvg = miniMultipleWrapper.append(\"svg\").attr(\"class\", \"slope-mini-svg\").attr(\"height\", miniHeight).style(\"height\", miniHeight + \"px\");\n\n    miniMultipleWrapperSvg.append(\"circle\").attr(\"cx\", function (d) {\n      return 0;\n    }).attr(\"cy\", function (d) {\n      return multipleY(getPercent(d.value.values[0]));\n    }).attr(\"r\", 2).attr(\"class\", \"slope-small-dot\").style(\"fill\", function (d) {\n\n      console.log(newsIDName.get(d.key).Company);\n      console.log(getPercent(d.value.yearMap.get(2014)));\n      console.log(getPercent(d.value.values[0]));\n\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    });\n\n    miniMultipleWrapperSvg.append(\"circle\").attr(\"cx\", function (d) {\n      return miniWidth;\n    }).attr(\"cy\", function (d) {\n      return multipleY(getPercent(d.value.yearMap.get(2014)));\n    }).attr(\"r\", 2).attr(\"class\", \"slope-small-dot\").style(\"fill\", function (d) {\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    });\n\n    miniMultipleWrapperSvg.selectAll(\"line\").data([0, 1, 2, 4, 5]).enter().append(\"line\").attr(\"class\", \"slope-line-axis\").attr(\"y1\", function (d, i) {\n      return i * 20 + \"%\";\n    }).attr(\"x1\", function (d) {\n      return 0;\n    }).attr(\"y2\", function (d, i) {\n      return i * 20 + \"%\";\n    }).attr(\"x2\", function (d) {\n      return miniWidth;\n    });\n\n    miniMultipleWrapperSvg.append(\"line\").attr(\"class\", \"slope-line\").attr(\"y1\", function (d) {\n      return multipleY(getPercent(d.value.values[0]));\n    }).attr(\"x1\", function (d) {\n      return 0;\n    }).attr(\"y2\", function (d) {\n      return multipleY(getPercent(d.value.yearMap.get(2014)));\n    }).attr(\"x2\", function (d) {\n      return miniWidth;\n    }).style(\"stroke\", function (d) {\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    });\n\n    // cell\n    //   .append(\"circle\")\n    //   .attr(\"class\",\"swarm-circle\")\n    //   .attr(\"r\", function(d){\n    //     return d.radius\n    //   })\n    //   // .attr(\"cx\", function(d) { return d.x; })\n    //   // .attr(\"cy\", function(d) { return d.y; })\n    //   .on(\"mouseover\",function(d){\n    //     console.log(d.male_num/d.total_num);\n    //     console.log(newsIDName.get(d.NewsID).Company);\n    //   })\n    //   ;\n\n    // dataToMap.values = d3.nest()\n    //   .key(function(d){\n    //     return Math.round(getPercent(d)*50)/50;\n    //   })\n    //   .sortKeys(function(a,b){\n    //     return a-b;\n    //   })\n    //   .entries(dataToMap.values)\n    //   ;\n    //\n    // chartDiv.append(\"div\")\n    //   .attr(\"class\",\"histogram-avg-div\")\n    //   .style(\"left\",function(d){\n    //     return (dataToMap.average*width+1)+\"px\"\n    //   })\n    //   .append(\"p\")\n    //   .text(Math.round(dataToMap.average*100)+\"%\")\n    //   ;\n    //\n    // var yearsColumn = chartDiv\n    //   .selectAll(\".histogram-year-container\")\n    //   .data(dataToMap.values)\n    //   .enter()\n    //   .append(\"div\")\n    //   .attr(\"class\",\"histogram-year-container\")\n    //   .style(\"left\",function(d){\n    //     return (d.key*width+1)+\"px\"\n    //   })\n    //   ;\n    //\n    // yearsColumn\n    //   .selectAll(\"div\")\n    //   .data(function(d){\n    //     return d.values\n    //   })\n    //   .enter()\n    //   .append(\"div\")\n    //   .attr(\"class\",function(d){\n    //     var state = null;\n    //     var region = null;\n    //     if(newsIdMap.has(d.NewsID)){\n    //       state = newsIdMap.get(d.NewsID).State;\n    //     }\n    //     if(regionMap.has(state)){\n    //       region = regionMap.get(state)[3];\n    //     }\n    //\n    //     if(region ==\"West\"){\n    //       region = \"green\"\n    //     }\n    //     if(region ==\"South\"){\n    //       region = \"blue\"\n    //     }\n    //     if(region ==\"Midwest\"){\n    //       region = \"purple\"\n    //     }\n    //     if(region ==\"Northeast\"){\n    //       region = \"yellow\"\n    //     }\n    //     return \"histogram-year-item \"+region\n    //   })\n    //   .style(\"background-color\",function(d){\n    //     // return backgroundFunction(d)\n    //     return null\n    //   })\n    //   .on(\"mouseover\",function(d){\n    //     console.log(newsIDName.get(d.NewsID).Company);\n    //   })\n    //   ;\n    //\n    // yearsColumn.append(\"p\")\n    //   .text(function(d,i){\n    //     if(i%5 == 0 || i==0 || i==yearsColumn.size()-1){\n    //       return Math.round(d.key*100)+\"%\";\n    //     }\n    //     return null;\n    //\n    //   })\n    //   ;\n  }\n  function backgroundFunction(d) {\n    var state = null;\n    var region = null;\n    if (newsIdMap.has(d.NewsID)) {\n      state = newsIdMap.get(d.NewsID).State;\n    }\n    if (regionMap.has(state)) {\n      region = regionMap.get(state)[3];\n    }\n    if (region == \"West\") {\n      return \"green\";\n    }\n    if (region == \"South\") {\n      return \"blue\";\n    }\n    if (region == \"Midwest\") {\n      return \"purple\";\n    }\n    if (region == \"Northeast\") {\n      return \"yellow\";\n    }\n  }\n  buildChart();\n}\n\nexports.default = { init: init };//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar states = [[\"Maine\", \"ME\", 1, \"Northeast\", 23], [\"Vermont\", \"VT\", 2, \"Northeast\", 50], [\"New Hampshire\", \"NH\", 3, \"Northeast\", 33], [\"Rhode Island\", \"RI\", 4, \"Northeast\", 44], [\"Massachusetts\", \"MA\", 5, \"Northeast\", 25], [\"Connecticut\", \"CT\", 6, \"Northeast\", 9], [\"Delaware\", \"DE\", 7, \"Northeast\", 10], [\"New Jersey\", \"NJ\", 8, \"Northeast\", 34], [\"New York\", \"NY\", 9, \"Northeast\", 36], [\"Pennsylvania\", \"PA\", 10, \"Northeast\", 42], [\"District of Columbia\", \"DC\", 11, \"Northeast\", 11], [\"Maryland\", \"MD\", 12, \"Northeast\", 24], [\"Virginia\", \"VA\", 13, \"South\", 51], [\"North Carolina\", \"NC\", 14, \"South\", 37], [\"South Carolina\", \"SC\", 15, \"South\", 45], [\"Georgia\", \"GA\", 16, \"South\", 13], [\"Alabama\", \"AL\", 17, \"South\", 1], [\"Mississippi\", \"MS\", 18, \"South\", 28], [\"Louisiana\", \"LA\", 19, \"South\", 22], [\"Arkansas\", \"AR\", 20, \"South\", 5], [\"Tennessee\", \"TN\", 21, \"South\", 47], [\"Kentucky\", \"KY\", 22, \"South\", 21], [\"West Virginia\", \"WV\", 23, \"South\", 54], [\"Oklahoma\", \"OK\", 24, \"Midwest\", 40], [\"Colorado\", \"CO\", 25, \"West\", 8], [\"Utah\", \"UT\", 26, \"West\", 49], [\"Idaho\", \"ID\", 27, \"West\", 16], [\"Wyoming\", \"WY\", 28, \"West\", 56], [\"Montana\", \"MT\", 29, \"West\", 30], [\"North Dakota\", \"ND\", 30, \"Midwest\", 38], [\"South Dakota\", \"SD\", 31, \"Midwest\", 46], [\"Nebraska\", \"NE\", 32, \"Midwest\", 31], [\"Kansas\", \"KS\", 33, \"Midwest\", 20], [\"Iowa\", \"IA\", 34, \"Midwest\", 19], [\"Minnesota\", \"MN\", 35, \"Midwest\", 27], [\"Wisconsin\", \"WI\", 36, \"Midwest\", 55], [\"Indiana\", \"IN\", 37, \"Midwest\", 18], [\"Missouri\", \"MO\", 38, \"Midwest\", 29], [\"Ohio\", \"OH\", 39, \"Midwest\", 39], [\"Michigan\", \"MI\", 40, \"Midwest\", 26], [\"Illinois\", \"IL\", 41, \"Midwest\", 17], [\"Florida\", \"FL\", 42, \"South\", 12], [\"California\", \"CA\", 43, \"West\", 6], [\"Nevada\", \"NV\", 44, \"West\", 32], [\"Texas\", \"TX\", 45, \"South\", 48], [\"Arizona\", \"AZ\", 46, \"West\", 4], [\"New Mexico\", \"NM\", 47, \"West\", 35], [\"Alaska\", \"AK\", 48, \"West\", 2], [\"Washington\", \"WA\", 49, \"West\", 53], [\"Oregon\", \"OR\", 50, \"West\", 41], [\"Hawaii\", \"HI\", 51, \"West\", 15]];\n\nfunction init(mapData, latLongData, newsIDLocation, newsIDInfo) {\n\n  var cut = \"gender\";\n  // var cut = \"supGender\"\n  var countMin = 100;\n\n  function getAverage(data) {\n    if (cut == \"gender\") {\n      var mean = d3.mean(data, function (d) {\n        return +d.male_num / d.total_num;\n      });\n      console.log(mean);\n      return mean;\n    }\n    if (cut == \"supWhite\") {\n      return d3.mean(data, function (d) {\n        return +d.white_sup_num / d.total_sup_num;\n      });\n    }\n    if (cut == \"supGender\") {\n      return d3.mean(data, function (d) {\n        return +d.male_sup_num / d.total_sup_num;\n      });\n    }\n    return d3.mean(data, function (d) {\n      return +d.white_num / d.total_num;\n    });\n  }\n\n  function getPercent(data) {\n    if (cut == \"gender\") {\n      return +data.male_num / data.total_num;\n    }\n    if (cut == \"supWhite\") {\n      return +data.white_sup_num / data.total_sup_num;\n    }\n    if (cut == \"supGender\") {\n      return +data.male_sup_num / data.total_sup_num;\n    }\n    return +data.white_num / data.total_num;\n  }\n\n  var latLongMap = d3.map(latLongData, function (d) {\n    return d.NewsID;\n  });\n  var newsIdMap = d3.map(newsIDLocation, function (d) {\n    return d.NewsID;\n  });\n  var newsIDName = d3.map(newsIDInfo, function (d) {\n    return d.NewsID;\n  });\n  var regionMap = d3.map(states, function (d) {\n    return d[1];\n  });\n\n  var margin = { top: 40, right: 40, bottom: 40, left: 40 };\n  var width = 1000 - margin.left - margin.right;\n  var height = 500 - margin.top - margin.bottom;\n  var horzScale = d3.scaleLinear().domain([0, 1]).range([0, width]);\n  var container = d3.select(\".slope-chart\");\n\n  var toggles = container.append(\"div\").attr(\"class\", \"histogram-chart-toggle-wrapper\");\n\n  toggles.append(\"div\").attr(\"class\", \"histogram-chart-toggle-size\").selectAll(\"p\").data([0, 20, 50, 100, 500]).enter().append(\"p\").attr(\"class\", \"histogram-chart-toggle-item\").text(function (d) {\n    return d;\n  }).on(\"click\", function (d) {\n    countMin = d;\n    buildChart();\n  });\n\n  toggles.append(\"div\").attr(\"class\", \"histogram-chart-toggle-type\").selectAll(\"p\").data([\"race\", \"gender\", \"supWhite\", \"supGender\"]).enter().append(\"p\").attr(\"class\", \"histogram-chart-toggle-item\").text(function (d) {\n    return d;\n  }).on(\"click\", function (d) {\n    cut = d;\n    buildChart();\n  });\n\n  var xScale = d3.scaleLinear().domain([.54, .75]).range([0, width]);\n\n  function buildChart() {\n\n    d3.selectAll(\".slope-chart-wrapper\").remove();\n\n    var chartDiv = container.append(\"svg\").attr(\"class\", \"slope-chart-wrapper\").attr(\"width\", width).attr(\"height\", height);\n\n    var miniMultiple = container.append(\"div\").attr(\"class\", \"slope-mini-multiple-div\");\n\n    var filteredMapData = mapData.filter(function (d) {\n      if (cut == \"supWhite\" || cut == \"supGender\") {\n        return d.total_num > countMin && d.total_sup_num > 0;\n      }\n      return d.total_num > countMin;\n    });\n\n    var newsNest = d3.nest().key(function (d) {\n      return +d.NewsID;\n    }).rollup(function (leaves) {\n      var map = d3.map(leaves, function (d) {\n        return d.Year;\n      });\n      var maxTotalNum = d3.max(leaves, function (d) {\n        return d.total_num;\n      });\n      return { yearMap: map, values: leaves, maxTotal: maxTotalNum };\n    }).entries(filteredMapData);\n\n    newsNest = newsNest.filter(function (d) {\n      if (d.value.yearMap.has(2014)) {\n        return d;\n      }\n      return null;\n    });\n\n    var totalExtent = d3.extent(newsNest, function (d) {\n      return +d.value.maxTotal;\n    });\n    var radiusScale = d3.scaleLinear().domain(totalExtent).range([5, 30]);\n\n    // function buildAxis(){\n    //  var chartAxis = chartDiv.append(\"g\")\n    //    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    //    .attr(\"class\",\"swarm-axis\")\n    //    ;\n    //\n    //  chartAxis.append(\"g\")\n    //    .append(\"line\")\n    //    .attr(\"x1\",0)\n    //    .attr(\"x2\",\"100%\")\n    //    .attr(\"y1\",height/2)\n    //    .attr(\"y2\",height/2)\n    //    .attr(\"class\",\"swarm-axis-line\")\n    //\n    // }\n    // buildAxis();\n\n    var chartG = chartDiv.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // function buildAverage(){\n    //   var chartAverage = chartDiv.append(\"g\")\n    //      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    //      .attr(\"class\",\"swarm-average\")\n    //      ;\n    //\n    //  chartAverage.append(\"text\")\n    //    .attr(\"class\",\"swarm-average-text swarm-average-text-label\")\n    //    .attr(\"x\",xScale(dataToMap.average))\n    //    .attr(\"y\",height*.33-19)\n    //    .text(\"Overall\")\n    //\n    //   chartAverage.append(\"text\")\n    //     .attr(\"class\",\"swarm-average-text\")\n    //     .attr(\"x\",xScale(dataToMap.average))\n    //     .attr(\"y\",height*.33-5)\n    //     .text(Math.round(dataToMap.average*100)+\"% Male\")\n    //\n    //   chartAverage.append(\"line\")\n    //     .attr(\"class\",\"swarm-average-line\")\n    //     .attr(\"x1\",xScale(dataToMap.average))\n    //     .attr(\"x2\",xScale(dataToMap.average))\n    //     .attr(\"y1\",height*.33)\n    //     .attr(\"y2\",height*.66)\n    //     ;\n    // }\n    // buildAverage();\n\n    var topRowCircle = chartG.append(\"g\").selectAll(\"circle\").data(newsNest).enter().append(\"circle\").attr(\"class\", \"swarm-circle\").attr(\"r\", function (d) {\n      return 3;\n    }).attr(\"cx\", function (d) {\n      return xScale(getPercent(d.value.yearMap.get(2014)));\n    }).attr(\"cy\", function (d) {\n      return 0;\n    }).style(\"fill\", function (d) {\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    }).on(\"mouseover\", function (d) {\n      console.log(d);\n    });\n\n    var bottomRowCircle = chartG.append(\"g\").selectAll(\"circle\").data(newsNest).enter().append(\"circle\").attr(\"class\", \"swarm-circle\").attr(\"r\", function (d) {\n      return 3;\n    }).attr(\"cx\", function (d) {\n      return xScale(getPercent(d.value.values[0]));\n    }).attr(\"cy\", function (d) {\n      return 100;\n    }).style(\"fill\", function (d) {\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    });\n\n    var rowLines = chartG.append(\"g\").selectAll(\"line\").data(newsNest).enter().append(\"line\").attr(\"class\", \"slope-line\").attr(\"x2\", function (d) {\n      return xScale(getPercent(d.value.values[0]));\n    }).attr(\"y2\", function (d) {\n      return 100;\n    }).attr(\"x1\", function (d) {\n      return xScale(getPercent(d.value.yearMap.get(2014)));\n    }).attr(\"y1\", function (d) {\n      return 0;\n    }).style(\"stroke\", function (d) {\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    });\n\n    var miniWidth = 40;\n    var miniHeight = 100;\n\n    var multipleY = d3.scaleLinear().domain([.3, 1]).range([miniHeight, 0]);\n\n    var miniMultipleWrapper = miniMultiple.selectAll(\"div\").data(newsNest).enter().append(\"div\").attr(\"class\", \"mini-multiple-div\");\n\n    miniMultipleWrapper.append(\"p\").attr(\"class\", \"mini-multiple-text\").style(\"margin-top\", 20).text(function (d) {\n      return newsIDName.get(d.value.values[0].NewsID).Company;\n    });\n\n    var miniMultipleWrapperSvg = miniMultipleWrapper.append(\"svg\").attr(\"class\", \"slope-mini-svg\").attr(\"height\", miniHeight).style(\"height\", miniHeight + \"px\");\n\n    miniMultipleWrapperSvg.append(\"circle\").attr(\"cx\", function (d) {\n      return 0;\n    }).attr(\"cy\", function (d) {\n      return multipleY(getPercent(d.value.values[0]));\n    }).attr(\"r\", 2).attr(\"class\", \"slope-small-dot\").style(\"fill\", function (d) {\n\n      console.log(newsIDName.get(d.key).Company);\n      console.log(getPercent(d.value.yearMap.get(2014)));\n      console.log(getPercent(d.value.values[0]));\n\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    });\n\n    miniMultipleWrapperSvg.append(\"circle\").attr(\"cx\", function (d) {\n      return miniWidth;\n    }).attr(\"cy\", function (d) {\n      return multipleY(getPercent(d.value.yearMap.get(2014)));\n    }).attr(\"r\", 2).attr(\"class\", \"slope-small-dot\").style(\"fill\", function (d) {\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    });\n\n    miniMultipleWrapperSvg.selectAll(\"line\").data([0, 1, 2, 4, 5]).enter().append(\"line\").attr(\"class\", \"slope-line-axis\").attr(\"y1\", function (d, i) {\n      return i * 20 + \"%\";\n    }).attr(\"x1\", function (d) {\n      return 0;\n    }).attr(\"y2\", function (d, i) {\n      return i * 20 + \"%\";\n    }).attr(\"x2\", function (d) {\n      return miniWidth;\n    });\n\n    miniMultipleWrapperSvg.append(\"line\").attr(\"class\", \"slope-line\").attr(\"y1\", function (d) {\n      return multipleY(getPercent(d.value.values[0]));\n    }).attr(\"x1\", function (d) {\n      return 0;\n    }).attr(\"y2\", function (d) {\n      return multipleY(getPercent(d.value.yearMap.get(2014)));\n    }).attr(\"x2\", function (d) {\n      return miniWidth;\n    }).style(\"stroke\", function (d) {\n      var diff = getPercent(d.value.yearMap.get(2014)) - getPercent(d.value.values[0]);\n      if (diff > .01) {\n        return \"red\";\n      }\n      if (diff < .01) {\n        return \"green\";\n      }\n    });\n\n    // cell\n    //   .append(\"circle\")\n    //   .attr(\"class\",\"swarm-circle\")\n    //   .attr(\"r\", function(d){\n    //     return d.radius\n    //   })\n    //   // .attr(\"cx\", function(d) { return d.x; })\n    //   // .attr(\"cy\", function(d) { return d.y; })\n    //   .on(\"mouseover\",function(d){\n    //     console.log(d.male_num/d.total_num);\n    //     console.log(newsIDName.get(d.NewsID).Company);\n    //   })\n    //   ;\n\n    // dataToMap.values = d3.nest()\n    //   .key(function(d){\n    //     return Math.round(getPercent(d)*50)/50;\n    //   })\n    //   .sortKeys(function(a,b){\n    //     return a-b;\n    //   })\n    //   .entries(dataToMap.values)\n    //   ;\n    //\n    // chartDiv.append(\"div\")\n    //   .attr(\"class\",\"histogram-avg-div\")\n    //   .style(\"left\",function(d){\n    //     return (dataToMap.average*width+1)+\"px\"\n    //   })\n    //   .append(\"p\")\n    //   .text(Math.round(dataToMap.average*100)+\"%\")\n    //   ;\n    //\n    // var yearsColumn = chartDiv\n    //   .selectAll(\".histogram-year-container\")\n    //   .data(dataToMap.values)\n    //   .enter()\n    //   .append(\"div\")\n    //   .attr(\"class\",\"histogram-year-container\")\n    //   .style(\"left\",function(d){\n    //     return (d.key*width+1)+\"px\"\n    //   })\n    //   ;\n    //\n    // yearsColumn\n    //   .selectAll(\"div\")\n    //   .data(function(d){\n    //     return d.values\n    //   })\n    //   .enter()\n    //   .append(\"div\")\n    //   .attr(\"class\",function(d){\n    //     var state = null;\n    //     var region = null;\n    //     if(newsIdMap.has(d.NewsID)){\n    //       state = newsIdMap.get(d.NewsID).State;\n    //     }\n    //     if(regionMap.has(state)){\n    //       region = regionMap.get(state)[3];\n    //     }\n    //\n    //     if(region ==\"West\"){\n    //       region = \"green\"\n    //     }\n    //     if(region ==\"South\"){\n    //       region = \"blue\"\n    //     }\n    //     if(region ==\"Midwest\"){\n    //       region = \"purple\"\n    //     }\n    //     if(region ==\"Northeast\"){\n    //       region = \"yellow\"\n    //     }\n    //     return \"histogram-year-item \"+region\n    //   })\n    //   .style(\"background-color\",function(d){\n    //     // return backgroundFunction(d)\n    //     return null\n    //   })\n    //   .on(\"mouseover\",function(d){\n    //     console.log(newsIDName.get(d.NewsID).Company);\n    //   })\n    //   ;\n    //\n    // yearsColumn.append(\"p\")\n    //   .text(function(d,i){\n    //     if(i%5 == 0 || i==0 || i==yearsColumn.size()-1){\n    //       return Math.round(d.key*100)+\"%\";\n    //     }\n    //     return null;\n    //\n    //   })\n    //   ;\n  }\n  function backgroundFunction(d) {\n    var state = null;\n    var region = null;\n    if (newsIdMap.has(d.NewsID)) {\n      state = newsIdMap.get(d.NewsID).State;\n    }\n    if (regionMap.has(state)) {\n      region = regionMap.get(state)[3];\n    }\n    if (region == \"West\") {\n      return \"green\";\n    }\n    if (region == \"South\") {\n      return \"blue\";\n    }\n    if (region == \"Midwest\") {\n      return \"purple\";\n    }\n    if (region == \"Northeast\") {\n      return \"yellow\";\n    }\n  }\n  buildChart();\n}\n\nexports.default = { init: init };//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar states = [[\"Maine\", \"ME\", 1, \"Northeast\", 23], [\"Vermont\", \"VT\", 2, \"Northeast\", 50], [\"New Hampshire\", \"NH\", 3, \"Northeast\", 33], [\"Rhode Island\", \"RI\", 4, \"Northeast\", 44], [\"Massachusetts\", \"MA\", 5, \"Northeast\", 25], [\"Connecticut\", \"CT\", 6, \"Northeast\", 9], [\"Delaware\", \"DE\", 7, \"Northeast\", 10], [\"New Jersey\", \"NJ\", 8, \"Northeast\", 34], [\"New York\", \"NY\", 9, \"Northeast\", 36], [\"Pennsylvania\", \"PA\", 10, \"Northeast\", 42], [\"District of Columbia\", \"DC\", 11, \"Northeast\", 11], [\"Maryland\", \"MD\", 12, \"Northeast\", 24], [\"Virginia\", \"VA\", 13, \"South\", 51], [\"North Carolina\", \"NC\", 14, \"South\", 37], [\"South Carolina\", \"SC\", 15, \"South\", 45], [\"Georgia\", \"GA\", 16, \"South\", 13], [\"Alabama\", \"AL\", 17, \"South\", 1], [\"Mississippi\", \"MS\", 18, \"South\", 28], [\"Louisiana\", \"LA\", 19, \"South\", 22], [\"Arkansas\", \"AR\", 20, \"South\", 5], [\"Tennessee\", \"TN\", 21, \"South\", 47], [\"Kentucky\", \"KY\", 22, \"South\", 21], [\"West Virginia\", \"WV\", 23, \"South\", 54], [\"Oklahoma\", \"OK\", 24, \"Midwest\", 40], [\"Colorado\", \"CO\", 25, \"West\", 8], [\"Utah\", \"UT\", 26, \"West\", 49], [\"Idaho\", \"ID\", 27, \"West\", 16], [\"Wyoming\", \"WY\", 28, \"West\", 56], [\"Montana\", \"MT\", 29, \"West\", 30], [\"North Dakota\", \"ND\", 30, \"Midwest\", 38], [\"South Dakota\", \"SD\", 31, \"Midwest\", 46], [\"Nebraska\", \"NE\", 32, \"Midwest\", 31], [\"Kansas\", \"KS\", 33, \"Midwest\", 20], [\"Iowa\", \"IA\", 34, \"Midwest\", 19], [\"Minnesota\", \"MN\", 35, \"Midwest\", 27], [\"Wisconsin\", \"WI\", 36, \"Midwest\", 55], [\"Indiana\", \"IN\", 37, \"Midwest\", 18], [\"Missouri\", \"MO\", 38, \"Midwest\", 29], [\"Ohio\", \"OH\", 39, \"Midwest\", 39], [\"Michigan\", \"MI\", 40, \"Midwest\", 26], [\"Illinois\", \"IL\", 41, \"Midwest\", 17], [\"Florida\", \"FL\", 42, \"South\", 12], [\"California\", \"CA\", 43, \"West\", 6], [\"Nevada\", \"NV\", 44, \"West\", 32], [\"Texas\", \"TX\", 45, \"South\", 48], [\"Arizona\", \"AZ\", 46, \"West\", 4], [\"New Mexico\", \"NM\", 47, \"West\", 35], [\"Alaska\", \"AK\", 48, \"West\", 2], [\"Washington\", \"WA\", 49, \"West\", 53], [\"Oregon\", \"OR\", 50, \"West\", 41], [\"Hawaii\", \"HI\", 51, \"West\", 15]];\n\nfunction init(mapData, latLongData, newsIDLocation, newsIDInfo) {\n  //\n  var cut = \"gender\";\n  // var cut = \"supGender\"\n  var countMin = 50;\n\n  function getAverage(data) {\n    if (cut == \"gender\") {\n      return d3.mean(data, function (d) {\n        return +d.male_num / d.total_num;\n      });\n    }\n    if (cut == \"supWhite\") {\n      return d3.mean(data, function (d) {\n        return +d.white_sup_num / d.total_sup_num;\n      });\n    }\n    if (cut == \"supGender\") {\n      return d3.mean(data, function (d) {\n        return +d.male_sup_num / d.total_sup_num;\n      });\n    }\n    return d3.mean(data, function (d) {\n      return +d.white_num / d.total_num;\n    });\n  }\n\n  function getPercent(data) {\n    if (cut == \"gender\") {\n      return +data.male_num / data.total_num;\n    }\n    if (cut == \"supWhite\") {\n      return +data.white_sup_num / data.total_sup_num;\n    }\n    if (cut == \"supGender\") {\n      return +data.male_sup_num / data.total_sup_num;\n    }\n    return +data.white_num / data.total_num;\n  }\n\n  var latLongMap = d3.map(latLongData, function (d) {\n    return d.NewsID;\n  });\n  var newsIdMap = d3.map(newsIDLocation, function (d) {\n    return d.NewsID;\n  });\n  var newsIDName = d3.map(newsIDInfo, function (d) {\n    return d.NewsID;\n  });\n  var regionMap = d3.map(states, function (d) {\n    return d[1];\n  });\n\n  var margin = { top: 40, right: 40, bottom: 40, left: 40 };\n  var width = 1000 - margin.left - margin.right;\n  var height = 500 - margin.top - margin.bottom;\n  var horzScale = d3.scaleLinear().domain([0, 1]).range([0, width]);\n  var container = d3.select(\".swarm\");\n\n  var toggles = container.append(\"div\").attr(\"class\", \"histogram-chart-toggle-wrapper\");\n\n  toggles.append(\"div\").attr(\"class\", \"histogram-chart-toggle-size\").selectAll(\"p\").data([0, 20, 50, 100, 500]).enter().append(\"p\").attr(\"class\", \"histogram-chart-toggle-item\").text(function (d) {\n    return d;\n  }).on(\"click\", function (d) {\n    countMin = d;\n    buildChart();\n  });\n\n  toggles.append(\"div\").attr(\"class\", \"histogram-chart-toggle-type\").selectAll(\"p\").data([\"race\", \"gender\", \"supWhite\", \"supGender\"]).enter().append(\"p\").attr(\"class\", \"histogram-chart-toggle-item\").text(function (d) {\n    return d;\n  }).on(\"click\", function (d) {\n    cut = d;\n    buildChart();\n  });\n\n  var xScale = d3.scaleLinear().domain([.3, 1]).range([0, width]);\n\n  function buildChart() {\n\n    d3.selectAll(\".swarm-chart-wrapper\").remove();\n\n    var chartDiv = container.append(\"svg\").attr(\"class\", \"swarm-chart-wrapper\").attr(\"width\", width).attr(\"height\", height);\n\n    var filteredMapData = mapData.filter(function (d) {\n      if (cut == \"supWhite\" || cut == \"supGender\") {\n        return d.total_num > countMin && d.total_sup_num > 0;\n      }\n      return d.total_num > countMin;\n    });\n\n    var yearNest = d3.nest().key(function (d) {\n      return +d.Year;\n    }).rollup(function (leaves) {\n      var average = getAverage(leaves);\n      return { average: average, values: leaves };\n    }).entries(filteredMapData);\n\n    var newsNest = d3.nest().key(function (d) {\n      return +d.NewsID;\n    }).rollup(function (leaves) {\n      var map = d3.map(leaves, function (d) {\n        return d.Year;\n      });\n      var maxTotalNum = d3.max(leaves, function (d) {\n        return d.total_num;\n      });\n      //\n      // var diff = getPercent(map.get(2014))-getPercent(leaves[0])\n      //\n\n      return { yearMap: map, values: leaves, maxTotal: maxTotalNum };\n    }).entries(filteredMapData);\n\n    var diffArray = [];\n\n    newsNest = newsNest.filter(function (d) {\n      if (d.value.yearMap.has(2014)) {\n        return d;\n      }\n      return null;\n    });\n    for (var item in newsNest) {\n      var diff = getPercent(newsNest[item].value.yearMap.get(2014)) - getPercent(newsNest[item].value.values[0]);\n      diffArray.push(diff);\n      newsNest[item].value.diff = diff;\n    }\n    ;\n\n    var newsMap = d3.map(newsNest, function (d) {\n      return d.key;\n    });\n\n    var diffExtent = d3.extent(diffArray, function (d) {\n      return d;\n    });\n    var colorScale = d3.scaleLinear().domain(diffExtent).range([\"green\", \"red\"]);\n\n    var dataToMap = yearNest.filter(function (d) {\n      return d.key == 2014;\n    })[0].value;\n\n    var totalExtent = d3.extent(dataToMap.values, function (d) {\n      return +d.total_num;\n    });\n    var radiusScale = d3.scaleLinear().domain(totalExtent).range([5, 30]);\n    dataToMap.values.forEach(function (d, i) {\n      d.radius = radiusScale(d.total_num);\n    });\n\n    var forceCollide = d3.forceCollide()\n    // .radius(function(d) { return d.radius + 1.5; })\n    .radius(function (d) {\n      return d.radius + 1;\n    }).iterations(1);\n\n    var simulation = d3.forceSimulation(dataToMap.values).force(\"x\", d3.forceX(function (d) {\n      return xScale(getPercent(d));\n    }).strength(1)).force(\"y\", d3.forceY(height / 2)).force(\"collide\", forceCollide)\n    //  .force(\"collide\", d3.forceCollide(4))\n    .stop();\n\n    function buildAxis() {\n      var chartAxis = chartDiv.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\").attr(\"class\", \"swarm-axis\");\n\n      chartAxis.append(\"g\").append(\"line\").attr(\"x1\", 0).attr(\"x2\", \"100%\").attr(\"y1\", height / 2).attr(\"y2\", height / 2).attr(\"class\", \"swarm-axis-line\");\n    }\n    buildAxis();\n\n    var chartG = chartDiv.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    function buildAverage() {\n      var chartAverage = chartDiv.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\").attr(\"class\", \"swarm-average\");\n\n      chartAverage.append(\"text\").attr(\"class\", \"swarm-average-text swarm-average-text-label\").attr(\"x\", xScale(dataToMap.average)).attr(\"y\", height * .33 - 19).text(\"Overall\");\n\n      chartAverage.append(\"text\").attr(\"class\", \"swarm-average-text\").attr(\"x\", xScale(dataToMap.average)).attr(\"y\", height * .33 - 5).text(Math.round(dataToMap.average * 100) + \"% Male\");\n\n      chartAverage.append(\"line\").attr(\"class\", \"swarm-average-line\").attr(\"x1\", xScale(dataToMap.average)).attr(\"x2\", xScale(dataToMap.average)).attr(\"y1\", height * .33).attr(\"y2\", height * .66);\n    }\n    buildAverage();\n\n    for (var i = 0; i < 250; ++i) {\n      simulation.tick();\n    }var cell = chartG.selectAll(\"g\").data(dataToMap.values).enter().append(\"g\");\n\n    cell.append(\"circle\").attr(\"class\", \"swarm-circle\").attr(\"r\", function (d) {\n      return d.radius;\n    }).attr(\"cx\", function (d) {\n      return d.x;\n    }).attr(\"cy\", function (d) {\n      return d.y;\n    }).on(\"mouseover\", function (d) {\n      console.log(d.male_num / d.total_num);\n      console.log(newsIDName.get(d.NewsID).Company);\n    }).style(\"fill\", function (d) {\n\n      return colorScale(newsMap.get(d.NewsID).value.diff);\n    });\n  }\n  function backgroundFunction(d) {\n    var state = null;\n    var region = null;\n    if (newsIdMap.has(d.NewsID)) {\n      state = newsIdMap.get(d.NewsID).State;\n    }\n    if (regionMap.has(state)) {\n      region = regionMap.get(state)[3];\n    }\n    if (region == \"West\") {\n      return \"green\";\n    }\n    if (region == \"South\") {\n      return \"blue\";\n    }\n    if (region == \"Midwest\") {\n      return \"purple\";\n    }\n    if (region == \"Northeast\") {\n      return \"yellow\";\n    }\n  }\n  buildChart();\n}\n\nexports.default = { init: init };//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// D3 is included by globally by default\n// import * as d3 from 'd3'\n// import loadData from './load-data'\n\nvar states = [[\"Maine\", \"ME\", 1, \"Northeast\", 23], [\"Vermont\", \"VT\", 2, \"Northeast\", 50], [\"New Hampshire\", \"NH\", 3, \"Northeast\", 33], [\"Rhode Island\", \"RI\", 4, \"Northeast\", 44], [\"Massachusetts\", \"MA\", 5, \"Northeast\", 25], [\"Connecticut\", \"CT\", 6, \"Northeast\", 9], [\"Delaware\", \"DE\", 7, \"Northeast\", 10], [\"New Jersey\", \"NJ\", 8, \"Northeast\", 34], [\"New York\", \"NY\", 9, \"Northeast\", 36], [\"Pennsylvania\", \"PA\", 10, \"Northeast\", 42], [\"District of Columbia\", \"DC\", 11, \"Northeast\", 11], [\"Maryland\", \"MD\", 12, \"Northeast\", 24], [\"Virginia\", \"VA\", 13, \"South\", 51], [\"North Carolina\", \"NC\", 14, \"South\", 37], [\"South Carolina\", \"SC\", 15, \"South\", 45], [\"Georgia\", \"GA\", 16, \"South\", 13], [\"Alabama\", \"AL\", 17, \"South\", 1], [\"Mississippi\", \"MS\", 18, \"South\", 28], [\"Louisiana\", \"LA\", 19, \"South\", 22], [\"Arkansas\", \"AR\", 20, \"South\", 5], [\"Tennessee\", \"TN\", 21, \"South\", 47], [\"Kentucky\", \"KY\", 22, \"South\", 21], [\"West Virginia\", \"WV\", 23, \"South\", 54], [\"Oklahoma\", \"OK\", 24, \"Midwest\", 40], [\"Colorado\", \"CO\", 25, \"West\", 8], [\"Utah\", \"UT\", 26, \"West\", 49], [\"Idaho\", \"ID\", 27, \"West\", 16], [\"Wyoming\", \"WY\", 28, \"West\", 56], [\"Montana\", \"MT\", 29, \"West\", 30], [\"North Dakota\", \"ND\", 30, \"Midwest\", 38], [\"South Dakota\", \"SD\", 31, \"Midwest\", 46], [\"Nebraska\", \"NE\", 32, \"Midwest\", 31], [\"Kansas\", \"KS\", 33, \"Midwest\", 20], [\"Iowa\", \"IA\", 34, \"Midwest\", 19], [\"Minnesota\", \"MN\", 35, \"Midwest\", 27], [\"Wisconsin\", \"WI\", 36, \"Midwest\", 55], [\"Indiana\", \"IN\", 37, \"Midwest\", 18], [\"Missouri\", \"MO\", 38, \"Midwest\", 29], [\"Ohio\", \"OH\", 39, \"Midwest\", 39], [\"Michigan\", \"MI\", 40, \"Midwest\", 26], [\"Illinois\", \"IL\", 41, \"Midwest\", 17], [\"Florida\", \"FL\", 42, \"South\", 12], [\"California\", \"CA\", 43, \"West\", 6], [\"Nevada\", \"NV\", 44, \"West\", 32], [\"Texas\", \"TX\", 45, \"South\", 48], [\"Arizona\", \"AZ\", 46, \"West\", 4], [\"New Mexico\", \"NM\", 47, \"West\", 35], [\"Alaska\", \"AK\", 48, \"West\", 2], [\"Washington\", \"WA\", 49, \"West\", 53], [\"Oregon\", \"OR\", 50, \"West\", 41], [\"Hawaii\", \"HI\", 51, \"West\", 15]];\n\nfunction init(mapData, latLongData, newsIDLocation, newsIDInfo) {\n  var cut = \"gender\";\n\n  var countMin = 100;\n\n  function getAverage(data) {\n    if (cut == \"gender\") {\n      return d3.mean(data, function (d) {\n        return +d.male_num / d.total_num;\n      });\n    }\n    if (cut == \"supWhite\") {\n      return d3.mean(data, function (d) {\n        return +d.white_sup_num / d.total_sup_num;\n      });\n    }\n    if (cut == \"supGender\") {\n      return d3.mean(data, function (d) {\n        return +d.male_sup_num / d.total_sup_num;\n      });\n    }\n    return d3.mean(data, function (d) {\n      return +d.white_num / d.total_num;\n    });\n  }\n  //\n  function getPercent(data) {\n    if (cut == \"gender\") {\n      return +data.male_num / data.total_num;\n    }\n    if (cut == \"supWhite\") {\n      return +data.white_sup_num / data.total_sup_num;\n    }\n    if (cut == \"supGender\") {\n      return +data.male_sup_num / data.total_sup_num;\n    }\n    return +data.white_num / data.total_num;\n  }\n\n  var latLongMap = d3.map(latLongData, function (d) {\n    return d.NewsID;\n  });\n  var newsIdMap = d3.map(newsIDLocation, function (d) {\n    return d.NewsID;\n  });\n  var newsIDName = d3.map(newsIDInfo, function (d) {\n    return d.NewsID;\n  });\n\n  var regionMap = d3.map(states, function (d) {\n    return d[1].toLowerCase();\n  });\n\n  var width = 500;\n  var horzScale = d3.scaleLinear().domain([0, 1]).range([0, width]);\n  var container = d3.select(\".table-rows\");\n\n  var toggles = container.append(\"div\").attr(\"class\", \"histogram-chart-toggle-wrapper\");\n\n  toggles.append(\"div\").attr(\"class\", \"histogram-chart-toggle-size\").selectAll(\"p\").data([0, 20, 50, 100, 500]).enter().append(\"p\").attr(\"class\", \"histogram-chart-toggle-item\").text(function (d) {\n    return d;\n  }).on(\"click\", function (d) {\n    countMin = d;\n    buildChart();\n  });\n\n  toggles.append(\"div\").attr(\"class\", \"histogram-chart-toggle-type\").selectAll(\"p\").data([\"race\", \"gender\", \"supWhite\", \"supGender\"]).enter().append(\"p\").attr(\"class\", \"histogram-chart-toggle-item\").text(function (d) {\n    return d;\n  }).on(\"click\", function (d) {\n    cut = d;\n    buildChart();\n  });\n\n  function buildChart() {\n\n    d3.selectAll(\".table-rows-wrapper\").remove();\n\n    var chartDiv = container.append(\"div\").attr(\"class\", \"table-rows-wrapper\");\n\n    var filteredMapData = mapData.filter(function (d) {\n      return d.total_num > countMin;\n    });\n    var yearNest = d3.nest().key(function (d) {\n      return +d.NewsID;\n    }).rollup(function (leaves) {\n      var extent = d3.extent(leaves, function (d) {\n        return d.Year;\n      });\n      return leaves.filter(function (d) {\n        return d.Year == extent[0] || d.Year == extent[1];\n      });\n    }).entries(filteredMapData);\n\n    //\n    var rows = chartDiv.selectAll(\"div\").data(yearNest).enter().append(\"div\").attr(\"class\", \"table-rows-row\");\n\n    rows.append(\"p\").text(function (d) {\n      return newsIDName.get(d.value[0].NewsID).Company;\n    }).attr(\"class\", \"table-rows-row-name\");\n\n    rows.selectAll(\"div\").data(function (d) {\n      return d.value;\n    }).enter().append(\"div\").sort(function (a, b) {\n      return a.Year - b.Year;\n    }).attr(\"class\", function (d) {\n      return \"table-rows-row-dot\";\n    }).style(\"background-color\", function (d) {\n      var state = null;\n      var region = null;\n      if (newsIdMap.has(d.NewsID)) {\n        state = newsIDName.get(d.NewsID).State;\n      }\n      if (regionMap.has(state)) {\n        region = regionMap.get(state)[3];\n      }\n      if (region == \"West\") {\n        return \"green\";\n      }\n      if (region == \"South\") {\n        return \"blue\";\n      }\n      if (region == \"Midwest\") {\n        return \"purple\";\n      }\n      if (region == \"Northeast\") {\n        return \"yellow\";\n      }\n      return \"grey\";\n    }).style(\"left\", function (d) {\n      return horzScale(getPercent(d)) + \"px\";\n    }).on(\"mouseover\", function (d) {\n      console.log(d);\n    }).append(\"p\").attr(\"class\", \"table-rows-row-dot-text\").html(function (d) {\n      return d.Year + \"<br>\" + Math.round(getPercent(d) * 100) + \"%\";\n    }).style(\"font-weight\", function (d, i) {\n      if (i == 1) {\n        return 700;\n      }\n    });\n  }\n\n  buildChart();\n}\n\nexports.default = { init: init };//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 11 */
/***/ (function(module, exports) {

eval("(function(){'use strict';var f,g=[];function l(a){g.push(a);1==g.length&&f()}function m(){for(;g.length;)g[0](),g.shift()}f=function(){setTimeout(m)};function n(a){this.a=p;this.b=void 0;this.f=[];var b=this;try{a(function(a){q(b,a)},function(a){r(b,a)})}catch(c){r(b,c)}}var p=2;function t(a){return new n(function(b,c){c(a)})}function u(a){return new n(function(b){b(a)})}function q(a,b){if(a.a==p){if(b==a)throw new TypeError;var c=!1;try{var d=b&&b.then;if(null!=b&&\"object\"==typeof b&&\"function\"==typeof d){d.call(b,function(b){c||q(a,b);c=!0},function(b){c||r(a,b);c=!0});return}}catch(e){c||r(a,e);return}a.a=0;a.b=b;v(a)}}\nfunction r(a,b){if(a.a==p){if(b==a)throw new TypeError;a.a=1;a.b=b;v(a)}}function v(a){l(function(){if(a.a!=p)for(;a.f.length;){var b=a.f.shift(),c=b[0],d=b[1],e=b[2],b=b[3];try{0==a.a?\"function\"==typeof c?e(c.call(void 0,a.b)):e(a.b):1==a.a&&(\"function\"==typeof d?e(d.call(void 0,a.b)):b(a.b))}catch(h){b(h)}}})}n.prototype.g=function(a){return this.c(void 0,a)};n.prototype.c=function(a,b){var c=this;return new n(function(d,e){c.f.push([a,b,d,e]);v(c)})};\nfunction w(a){return new n(function(b,c){function d(c){return function(d){h[c]=d;e+=1;e==a.length&&b(h)}}var e=0,h=[];0==a.length&&b(h);for(var k=0;k<a.length;k+=1)u(a[k]).c(d(k),c)})}function x(a){return new n(function(b,c){for(var d=0;d<a.length;d+=1)u(a[d]).c(b,c)})};window.Promise||(window.Promise=n,window.Promise.resolve=u,window.Promise.reject=t,window.Promise.race=x,window.Promise.all=w,window.Promise.prototype.then=n.prototype.c,window.Promise.prototype[\"catch\"]=n.prototype.g);}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3Byb21pcy9wcm9taXNlLmpzPzNhNTUiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7J3VzZSBzdHJpY3QnO3ZhciBmLGc9W107ZnVuY3Rpb24gbChhKXtnLnB1c2goYSk7MT09Zy5sZW5ndGgmJmYoKX1mdW5jdGlvbiBtKCl7Zm9yKDtnLmxlbmd0aDspZ1swXSgpLGcuc2hpZnQoKX1mPWZ1bmN0aW9uKCl7c2V0VGltZW91dChtKX07ZnVuY3Rpb24gbihhKXt0aGlzLmE9cDt0aGlzLmI9dm9pZCAwO3RoaXMuZj1bXTt2YXIgYj10aGlzO3RyeXthKGZ1bmN0aW9uKGEpe3EoYixhKX0sZnVuY3Rpb24oYSl7cihiLGEpfSl9Y2F0Y2goYyl7cihiLGMpfX12YXIgcD0yO2Z1bmN0aW9uIHQoYSl7cmV0dXJuIG5ldyBuKGZ1bmN0aW9uKGIsYyl7YyhhKX0pfWZ1bmN0aW9uIHUoYSl7cmV0dXJuIG5ldyBuKGZ1bmN0aW9uKGIpe2IoYSl9KX1mdW5jdGlvbiBxKGEsYil7aWYoYS5hPT1wKXtpZihiPT1hKXRocm93IG5ldyBUeXBlRXJyb3I7dmFyIGM9ITE7dHJ5e3ZhciBkPWImJmIudGhlbjtpZihudWxsIT1iJiZcIm9iamVjdFwiPT10eXBlb2YgYiYmXCJmdW5jdGlvblwiPT10eXBlb2YgZCl7ZC5jYWxsKGIsZnVuY3Rpb24oYil7Y3x8cShhLGIpO2M9ITB9LGZ1bmN0aW9uKGIpe2N8fHIoYSxiKTtjPSEwfSk7cmV0dXJufX1jYXRjaChlKXtjfHxyKGEsZSk7cmV0dXJufWEuYT0wO2EuYj1iO3YoYSl9fVxuZnVuY3Rpb24gcihhLGIpe2lmKGEuYT09cCl7aWYoYj09YSl0aHJvdyBuZXcgVHlwZUVycm9yO2EuYT0xO2EuYj1iO3YoYSl9fWZ1bmN0aW9uIHYoYSl7bChmdW5jdGlvbigpe2lmKGEuYSE9cClmb3IoO2EuZi5sZW5ndGg7KXt2YXIgYj1hLmYuc2hpZnQoKSxjPWJbMF0sZD1iWzFdLGU9YlsyXSxiPWJbM107dHJ5ezA9PWEuYT9cImZ1bmN0aW9uXCI9PXR5cGVvZiBjP2UoYy5jYWxsKHZvaWQgMCxhLmIpKTplKGEuYik6MT09YS5hJiYoXCJmdW5jdGlvblwiPT10eXBlb2YgZD9lKGQuY2FsbCh2b2lkIDAsYS5iKSk6YihhLmIpKX1jYXRjaChoKXtiKGgpfX19KX1uLnByb3RvdHlwZS5nPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmModm9pZCAwLGEpfTtuLnByb3RvdHlwZS5jPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcztyZXR1cm4gbmV3IG4oZnVuY3Rpb24oZCxlKXtjLmYucHVzaChbYSxiLGQsZV0pO3YoYyl9KX07XG5mdW5jdGlvbiB3KGEpe3JldHVybiBuZXcgbihmdW5jdGlvbihiLGMpe2Z1bmN0aW9uIGQoYyl7cmV0dXJuIGZ1bmN0aW9uKGQpe2hbY109ZDtlKz0xO2U9PWEubGVuZ3RoJiZiKGgpfX12YXIgZT0wLGg9W107MD09YS5sZW5ndGgmJmIoaCk7Zm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKz0xKXUoYVtrXSkuYyhkKGspLGMpfSl9ZnVuY3Rpb24geChhKXtyZXR1cm4gbmV3IG4oZnVuY3Rpb24oYixjKXtmb3IodmFyIGQ9MDtkPGEubGVuZ3RoO2QrPTEpdShhW2RdKS5jKGIsYyl9KX07d2luZG93LlByb21pc2V8fCh3aW5kb3cuUHJvbWlzZT1uLHdpbmRvdy5Qcm9taXNlLnJlc29sdmU9dSx3aW5kb3cuUHJvbWlzZS5yZWplY3Q9dCx3aW5kb3cuUHJvbWlzZS5yYWNlPXgsd2luZG93LlByb21pc2UuYWxsPXcsd2luZG93LlByb21pc2UucHJvdG90eXBlLnRoZW49bi5wcm90b3R5cGUuYyx3aW5kb3cuUHJvbWlzZS5wcm90b3R5cGVbXCJjYXRjaFwiXT1uLnByb3RvdHlwZS5nKTt9KCkpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3Byb21pcy9wcm9taXNlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 12 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XHJcblxyXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxyXG5nID0gKGZ1bmN0aW9uKCkge1xyXG5cdHJldHVybiB0aGlzO1xyXG59KSgpO1xyXG5cclxudHJ5IHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcclxuXHRnID0gZyB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkgfHwgKDEsZXZhbCkoXCJ0aGlzXCIpO1xyXG59IGNhdGNoKGUpIHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxyXG5cdGlmKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpXHJcblx0XHRnID0gd2luZG93O1xyXG59XHJcblxyXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXHJcbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXHJcbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZztcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ })
/******/ ]);